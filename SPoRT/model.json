{
    "name": "",
    "algorithms": [
        {
            "algorithm": {
                "name": "SPoRT male model",
                "derivedFields": [
                    {
                        "fieldType": 1,
                        "name": "Age_cont",
                        "equation": "derived = obj['age'];",
                        "derivedFrom": [
                            {
                                "name": "age",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['Age_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'Age_cont' }), userFunctions, func);",
                        "derivedFrom": ["Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeC_rcs1",
                        "equation": "derived = obj['AgeC_cont'];",
                        "derivedFrom": ["AgeC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "TypeOfSmoker2",
                        "equation": "derived = userFunctions['TypeOfSmoker2.fun'](obj['smk'], obj['evd'], obj['s100'], obj['wcig'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "smk",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "evd",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "s100",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "wcig",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "tsq_ds",
                        "equation": "derived = userFunctions['tsq_ds.fun'](obj['stpo'], obj['stpoy'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "stpo",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "stpoy",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYears",
                        "equation": "derived = func['exists']('TypeOfSmoker2') && func['not'](func['is.na']('TypeOfSmoker2')) ? userFunctions['PackYears1.fun'](obj['TypeOfSmoker2'], obj['Age_cont'], obj['agecigd'], obj['cigdayd'], obj['tsq_ds'], obj['cigdayf'], obj['cigdayo'], obj['dayocc'], obj['agec1'], obj['s100'], userFunctions, func) : func['exists']('SmokeDaily') && func['not'](func['is.na']('SmokeDaily')) ? userFunctions['PackYears2.fun'](obj['SmokeDaily'], obj['Age_cont'], obj['AgeDailyStart'], obj['DailyCig'], obj['AgeDailyQuit'], userFunctions, func) : undefined;",
                        "derivedFrom": [
                            "TypeOfSmoker2",
                            "Age_cont",
                            {
                                "name": "agecigd",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayd",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "tsq_ds",
                            {
                                "name": "cigdayf",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayo",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "dayocc",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "agec1",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "s100",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "SmokeDaily",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "AgeDailyStart",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "DailyCig",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "AgeDailyQuit",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYears_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['PackYears'], getValueFromTable(tables['CRSpec_Mutated_4'], 'UserMax_male', { 'index': 'PackYears_cont' }), userFunctions, func);",
                        "derivedFrom": ["PackYears"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYearsC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['PackYears_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'PackYears_cont' }), userFunctions, func);",
                        "derivedFrom": ["PackYears_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYearsC_rcs1",
                        "equation": "derived = obj['PackYearsC_cont'];",
                        "derivedFrom": ["PackYearsC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "smoker",
                        "equation": "derived = userFunctions['smoker.fun'](obj['TypeOfSmoker2'], userFunctions, func);",
                        "derivedFrom": ["TypeOfSmoker2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "eversmoker",
                        "equation": "derived = userFunctions['eversmoker.fun'](obj['TypeOfSmoker2'], userFunctions, func);",
                        "derivedFrom": ["TypeOfSmoker2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeSimple",
                        "equation": "derived = func['exists']('TypeOfSmoker2') && func['not'](func['is.na']('TypeOfSmoker2')) ? userFunctions['SmokeSimple1.fun'](obj['smoker'], obj['eversmoker'], obj['tsq_ds'], obj['TypeOfSmoker2'], userFunctions, func) : func['exists']('SmokeDaily') && func['not'](func['is.na']('SmokeDaily')) ? func['ifelse2'](func['not'](func['is.na'](obj['SmokeDaily'])), userFunctions['SmokeSimple2.fun'](obj['SmokeDaily'], obj['Age_cont'], obj['AgeDailyQuit'], userFunctions, func)) : undefined;",
                        "derivedFrom": [
                            "smoker",
                            "eversmoker",
                            "tsq_ds",
                            "TypeOfSmoker2",
                            {
                                "name": "SmokeDaily",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "Age_cont",
                            {
                                "name": "AgeDailyQuit",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer5Plus_cat",
                        "equation": "derived = func['ifelse2'](func['is.na'](obj['SmokeSimple']), undefined, func['ifelse2'](obj['SmokeSimple'] == 1, 1, 0));",
                        "derivedFrom": ["SmokeSimple"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer0to5_cat",
                        "equation": "derived = func['ifelse2'](func['is.na'](obj['SmokeSimple']), undefined, func['ifelse2'](obj['SmokeSimple'] == 2, 1, 0));",
                        "derivedFrom": ["SmokeSimple"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Former smoker: quit less than 5 years",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeCurrent_cat",
                        "equation": "derived = func['ifelse2'](func['is.na'](obj['SmokeSimple']), undefined, func['ifelse2'](obj['SmokeSimple'] == 3, 1, 0));",
                        "derivedFrom": ["SmokeSimple"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Current smoker",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer5PlusC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SmokeFormer5Plus_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SmokeFormer5Plus_cat' }), userFunctions, func);",
                        "derivedFrom": ["SmokeFormer5Plus_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer0to5C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SmokeFormer0to5_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SmokeFormer0to5_cat' }), userFunctions, func);",
                        "derivedFrom": ["SmokeFormer0to5_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeCurrentC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SmokeCurrent_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SmokeCurrent_cat' }), userFunctions, func);",
                        "derivedFrom": ["SmokeCurrent_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXPackYearsC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['PackYearsC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "PackYearsC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXSmokeFormer5PlusC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['SmokeFormer5PlusC_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "SmokeFormer5PlusC_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXSmokeFormer0to5C_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['SmokeFormer0to5C_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "SmokeFormer0to5C_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXSmokeCurrentC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['SmokeCurrentC_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "SmokeCurrentC_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkm2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkm'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkm",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkt2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkt'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkt",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkw2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkw'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkw",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkr2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkr'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkr",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkf2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkf'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkf",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksa2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksa'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksa",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksu2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek",
                        "equation": "derived = userFunctions['DrinksLastWeek.fun'](obj['drk_drkm2'], obj['drk_drkt2'], obj['drk_drkw2'], obj['drk_drkr2'], obj['drk_drkf2'], obj['drk_drksa2'], obj['drk_drksu2'], obj['dany'], userFunctions, func);",
                        "derivedFrom": [
                            "drk_drkm2",
                            "drk_drkt2",
                            "drk_drkw2",
                            "drk_drkr2",
                            "drk_drkf2",
                            "drk_drksa2",
                            "drk_drksu2",
                            {
                                "name": "dany",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['DrinksLastWeek'], getValueFromTable(tables['CRSpec_Mutated_4'], 'UserMax_male', { 'index': 'DrinksLastWeek_cont' }), userFunctions, func);",
                        "derivedFrom": ["DrinksLastWeek"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeekC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['DrinksLastWeek_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'DrinksLastWeek_cont' }), userFunctions, func);",
                        "derivedFrom": ["DrinksLastWeek_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeekC_rcs1",
                        "equation": "derived = obj['DrinksLastWeekC_cont'];",
                        "derivedFrom": ["DrinksLastWeekC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXDrinksLastWeekC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['DrinksLastWeekC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "DrinksLastWeekC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dfruit",
                        "equation": "derived = userFunctions['dfruit.fun'](obj['frt'], obj['frtu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "frt",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "frtu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dsalad",
                        "equation": "derived = userFunctions['dsalad.fun'](obj['sal'], obj['salu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "sal",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "salu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dpotato",
                        "equation": "derived = userFunctions['dpotato.fun'](obj['pot'], obj['potu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "pot",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "potu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dcarrot",
                        "equation": "derived = userFunctions['dcarrot.fun'](obj['car'], obj['caru'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "car",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "caru",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dveg",
                        "equation": "derived = userFunctions['dveg.fun'](obj['veg'], obj['vegu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "veg",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "vegu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "djuice",
                        "equation": "derived = userFunctions['djuice.fun'](obj['jui'], obj['juiu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "jui",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "juiu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg",
                        "equation": "derived = userFunctions['FruitVeg.fun'](obj['dfruit'], obj['dsalad'], obj['dpotato'], obj['dcarrot'], obj['dveg'], userFunctions, func);",
                        "derivedFrom": [
                            "dfruit",
                            "dsalad",
                            "dpotato",
                            "dcarrot",
                            "dveg"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['FruitVeg'], 12, userFunctions, func);",
                        "derivedFrom": ["FruitVeg"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVegC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['FruitVeg_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'FruitVeg_cont' }), userFunctions, func);",
                        "derivedFrom": ["FruitVeg_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVegC_rcs1",
                        "equation": "derived = obj['FruitVegC_cont'];",
                        "derivedFrom": ["FruitVegC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXFruitVegC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['FruitVegC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "FruitVegC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Juice_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['djuice'], 6, userFunctions, func);",
                        "derivedFrom": ["djuice"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "JuiceC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['Juice_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'Juice_cont' }), userFunctions, func);",
                        "derivedFrom": ["Juice_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXJuiceC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['JuiceC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "JuiceC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Potato_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['dpotato'], 2, userFunctions, func);",
                        "derivedFrom": ["dpotato"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PotatoC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['Potato_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'Potato_cont' }), userFunctions, func);",
                        "derivedFrom": ["Potato_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PotatoC_rcs1",
                        "equation": "derived = obj['PotatoC_cont'];",
                        "derivedFrom": ["PotatoC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXPotatoC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['PotatoC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "PotatoC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "weightlb",
                        "equation": "derived = obj['weightkg'] / 2.20462;",
                        "derivedFrom": [
                            {
                                "name": "weightkg",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "heightin_hft",
                        "equation": "derived = func['floor'](obj['heightm'] * 39.3701 / 12);",
                        "derivedFrom": [
                            {
                                "name": "heightm",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "heightin_hin",
                        "equation": "derived = (obj['heightm'] * 39.3701 / 12 - func['floor'](obj['heightm'] * 39.3701 / 12)) * 12;",
                        "derivedFrom": [
                            {
                                "name": "heightm",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMI_cont",
                        "equation": "derived = userFunctions['BMI_cont.fun'](obj['weightlb'], obj['heightin_hft'], obj['heightin_hin'], userFunctions, func);",
                        "derivedFrom": [
                            "weightlb",
                            "heightin_hft",
                            "heightin_hin"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMIC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['BMI_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'BMI_cont' }), userFunctions, func);",
                        "derivedFrom": ["BMI_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMIC_rcs1",
                        "equation": "derived = obj['BMIC_cont'];",
                        "derivedFrom": ["BMIC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXBMIC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['BMIC_rcs1'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "BMIC_rcs1"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Edu2",
                        "equation": "derived = userFunctions['Edu2.fun'](obj['hs'], obj['ed'], obj['hdg'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "hs",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "ed",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "hdg",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduHSGrad2_cat",
                        "equation": "derived = userFunctions['EduHSGrad2_cat.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "High school graduate",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduSomePS2_cat",
                        "equation": "derived = userFunctions['EduSomePS2_cat.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Some post-secondary education",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduPSGrad2_cat",
                        "equation": "derived = userFunctions['EduPSGrad2_cat.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Post-secondary school graduate",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduHSGrad2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['EduHSGrad2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'EduHSGrad2_cat' }), userFunctions, func);",
                        "derivedFrom": ["EduHSGrad2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduSomePS2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['EduSomePS2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'EduSomePS2_cat' }), userFunctions, func);",
                        "derivedFrom": ["EduSomePS2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduPSGrad2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['EduPSGrad2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'EduPSGrad2_cat' }), userFunctions, func);",
                        "derivedFrom": ["EduPSGrad2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Diabetes_cat",
                        "equation": "derived = userFunctions['Diabetes_cat.fun'](obj['diab'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "diab",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Has diabetes",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "DiabetesC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['Diabetes_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'Diabetes_cat' }), userFunctions, func);",
                        "derivedFrom": ["Diabetes_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXDiabetesC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['DiabetesC_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "DiabetesC_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Hypertension_cat",
                        "equation": "derived = userFunctions['Hypertension_cat.fun'](obj['bp'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "bp",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Has hypertension",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "HypertensionC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['Hypertension_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'Hypertension_cat' }), userFunctions, func);",
                        "derivedFrom": ["Hypertension_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXHypertensionC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['HypertensionC_cat'], obj['AgeC_cont'], userFunctions, func);",
                        "derivedFrom": ["HypertensionC_cat", "AgeC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle2_cat",
                        "equation": "derived = userFunctions['SurveyCycle2_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Canadian Community Health Survey cycle 2.1",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle3_cat",
                        "equation": "derived = userFunctions['SurveyCycle3_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Canadian Community Health Survey cycle 3.1",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle4_cat",
                        "equation": "derived = userFunctions['SurveyCycle4_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Canadian Community Health Survey cycle 4.1",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle5_cat",
                        "equation": "derived = userFunctions['SurveyCycle5_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle6_cat",
                        "equation": "derived = userFunctions['SurveyCycle6_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SurveyCycle2_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle3C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle3_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SurveyCycle3_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle3_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle4C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle4_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SurveyCycle4_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle4_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle5C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle5_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SurveyCycle5_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle5_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle6C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle6_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_male', { 'index': 'SurveyCycle6_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle6_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    }
                ],
                "userFunctions": {
                    "Center.fun": "\n        userFunctions[\"Center.fun\"] = (function (uncentered, mean, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](uncentered)), uncentered - mean, undefined);\n})\n    ",
                    "Interact.fun": "\n        userFunctions[\"Interact.fun\"] = (function (var1, var2, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](var1)) && func['not'](func['is.na'](var2)), var1 * var2, undefined);\n})\n    ",
                    "Max.fun": "\n        userFunctions[\"Max.fun\"] = (function (var1, max, userFunctions, func) {\n    return func['ifelse2'](var1 > max, max, var1);\n})\n    ",
                    "NA0.fun": "\n        userFunctions[\"NA0.fun\"] = (function (var1, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](var1), 0, var1);\n})\n    ",
                    "falseifNA": "\n        userFunctions[\"falseifNA\"] = (function (x, userFunctions, func) {\n    return func['ifelse'](func['is.na'](x), false, x);\n})\n    ",
                    "Age_spline.fun(Age_spline)": "\n        userFunctions[\"Age_spline.fun(Age_spline)\"] = (function (Age_cont, point, userFunctions, func) {\n    return func['ifelse2'](Age_cont <= point, 0, func['ifelse2'](Age_cont > point, Age_cont - point, undefined));\n})\n    ",
                    "TypeOfSmoker2.fun": "\n        userFunctions[\"TypeOfSmoker2.fun\"] = (function (smk, evd, s100, wcig, userFunctions, func) {\n    return func['ifelse2'](wcig == 'wcig2', 6, func['ifelse2'](smk == 'smk1', 1, func['ifelse2'](smk == 'smk2' && evd == 'evd1', 2, func['ifelse2'](smk == 'smk2' && evd == 'evd2', 3, func['ifelse2'](smk == 'smk3' && evd == 'evd1', 4, func['ifelse2'](smk == 'smk3' && evd == 'evd2' && s100 == 's1001', 5, func['ifelse2'](smk == 'smk3' && evd == 'evd2' && s100 == 's1002', 6, undefined)))))));\n})\n    ",
                    "tsq_ds.fun": "\n        userFunctions[\"tsq_ds.fun\"] = (function (stpo, stpoy, userFunctions, func) {\n    return func['ifelse'](stpo == 'stpo1', 0.5, func['ifelse'](stpo == 'stpo2', 1.5, func['ifelse'](stpo == 'stpo3', 2.5, func['ifelse'](stpo == 'stpo4', stpoy, undefined))));\n})\n    ",
                    "PackYears1.fun": "\n        userFunctions[\"PackYears1.fun\"] = (function (TypeOfSmoker2, Age_cont, agecigd, cigdayd, tsq_ds, cigdayf, cigdayo, dayocc, agec1, s100, userFunctions, func) {\n    return func['ifelse2'](TypeOfSmoker2 == 1, func['pmax']((Age_cont - agecigd) * (cigdayd / 20), 0.0137), func['ifelse2'](TypeOfSmoker2 == 2, func['pmax']((Age_cont - agecigd - tsq_ds) * (cigdayf / 20), 0.0137) + func['pmax'](cigdayo * dayocc / 30, 1) * tsq_ds, func['ifelse2'](TypeOfSmoker2 == 3, func['pmax'](cigdayo * dayocc / 30, 1) / 20 * (Age_cont - agec1), func['ifelse2'](TypeOfSmoker2 == 4, func['pmax']((Age_cont - agecigd - tsq_ds) * (cigdayf / 20), 0.0137), func['ifelse2'](TypeOfSmoker2 == 5 && s100 == 's1001', 0.0137, func['ifelse2'](TypeOfSmoker2 == 5 && s100 == 's1002', 0.007, func['ifelse2'](TypeOfSmoker2 == 6, 0, undefined)))))));\n})\n    ",
                    "PackYears2.fun": "\n        userFunctions[\"PackYears2.fun\"] = (function (SmokeDaily, Age_cont, AgeDailyStart, DailyCig, AgeDailyQuit, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1, (Age_cont - AgeDailyStart) * (DailyCig / 20), func['ifelse2'](SmokeDaily == 2, (AgeDailyQuit - AgeDailyStart) * (DailyCig / 20), undefined)));\n})\n    ",
                    "smoker.fun(smoker)": "\n        userFunctions[\"smoker.fun(smoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3), 1, func['ifelse'](func['isIn'](TypeOfSmoker2, 4, 5, 6), 0, undefined));\n})\n    ",
                    "smoker.fun": "\n        userFunctions[\"smoker.fun\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return userFunctions['smoker.fun(smoker)'](TypeOfSmoker2, userFunctions, func);\n})\n    ",
                    "eversmoker.fun(eversmoker)": "\n        userFunctions[\"eversmoker.fun(eversmoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3, 4, 5), 1, func['ifelse'](TypeOfSmoker2 == 6, 0, undefined));\n})\n    ",
                    "eversmoker.fun": "\n        userFunctions[\"eversmoker.fun\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return userFunctions['eversmoker.fun(eversmoker)'](TypeOfSmoker2, userFunctions, func);\n})\n    ",
                    "SmokeSimple1.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple1.fun(SmokeSimple)\"] = (function (smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse2'](smoker == 0 && eversmoker == 0, 0, func['ifelse2'](smoker == 1 && eversmoker == 1, 1, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds < 5 || TypeOfSmoker2 == 5, 2, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds >= 5, 3, undefined))));\n})\n    ",
                    "SmokeSimple1.fun": "\n        userFunctions[\"SmokeSimple1.fun\"] = (function (smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func) {\n    return userFunctions['SmokeSimple1.fun(SmokeSimple)'](smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func);\n})\n    ",
                    "SmokeSimple2.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple2.fun(SmokeSimple)\"] = (function (SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1, 1, func['ifelse2'](SmokeDaily == 2 && Age_cont < AgeDailyQuit + 5, 2, func['ifelse2'](SmokeDaily == 2 && Age_cont > AgeDailyQuit + 5, 3, undefined))));\n})\n    ",
                    "SmokeSimple2.fun": "\n        userFunctions[\"SmokeSimple2.fun\"] = (function (SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func) {\n    return userFunctions['SmokeSimple2.fun(SmokeSimple)'](SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func);\n})\n    ",
                    "DrinksLastWeek.fun": "\n        userFunctions[\"DrinksLastWeek.fun\"] = (function (drk_drkm2, drk_drkt2, drk_drkw2, drk_drkr2, drk_drkf2, drk_drksa2, drk_drksu2, dany, userFunctions, func) {\n    return func['ifelse2'](dany == 'dany2', 0, func['ifelse2'](dany == 'dany1', drk_drkm2 + drk_drkt2 + drk_drkw2 + drk_drkr2 + drk_drkf2 + drk_drksa2 + drk_drksu2, undefined));\n})\n    ",
                    "dfruit.fun": "\n        userFunctions[\"dfruit.fun\"] = (function (frt, frtu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](frt), undefined, func['ifelse'](frtu == 'frtd', frt, func['ifelse'](frtu == 'frtw', frt / 7, func['ifelse'](frtu == 'frtm', frt / 30, func['ifelse'](frtu == 'frty', frt / 365, undefined)))));\n})\n    ",
                    "dsalad.fun": "\n        userFunctions[\"dsalad.fun\"] = (function (sal, salu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](sal), undefined, func['ifelse'](salu == 'sald', sal, func['ifelse'](salu == 'salw', sal / 7, func['ifelse'](salu == 'salm', sal / 30, func['ifelse'](salu == 'saly', sal / 365, undefined)))));\n})\n    ",
                    "dpotato.fun": "\n        userFunctions[\"dpotato.fun\"] = (function (pot, potu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](pot), undefined, func['ifelse'](potu == 'potd', pot, func['ifelse'](potu == 'potw', pot / 7, func['ifelse'](potu == 'potm', pot / 30, func['ifelse'](potu == 'poty', pot / 365, undefined)))));\n})\n    ",
                    "dcarrot.fun": "\n        userFunctions[\"dcarrot.fun\"] = (function (car, caru, userFunctions, func) {\n    return func['ifelse'](func['is.na'](car), undefined, func['ifelse'](caru == 'card', car, func['ifelse'](caru == 'carw', car / 7, func['ifelse'](caru == 'carm', car / 30, func['ifelse'](caru == 'cary', car / 365, undefined)))));\n})\n    ",
                    "dveg.fun": "\n        userFunctions[\"dveg.fun\"] = (function (veg, vegu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](veg), undefined, func['ifelse'](vegu == 'vegd', veg, func['ifelse'](vegu == 'vegw', veg / 7, func['ifelse'](vegu == 'vegm', veg / 30, func['ifelse'](vegu == 'vegy', veg / 365, undefined)))));\n})\n    ",
                    "djuice.fun": "\n        userFunctions[\"djuice.fun\"] = (function (jui, juiu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](jui), undefined, func['ifelse'](juiu == 'juid', jui, func['ifelse'](juiu == 'juiw', jui / 7, func['ifelse'](juiu == 'juim', jui / 30, func['ifelse'](juiu == 'juiy', jui / 365, undefined)))));\n})\n    ",
                    "FruitVeg.fun": "\n        userFunctions[\"FruitVeg.fun\"] = (function (dfruit, dsalad, dpotato, dcarrot, dveg, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](dfruit)) && func['not'](func['is.na'](dsalad)) && func['not'](func['is.na'](dpotato)) && func['not'](func['is.na'](dcarrot)) && func['not'](func['is.na'](dveg)), dfruit + dsalad + dpotato + dcarrot + dveg, undefined);\n})\n    ",
                    "BMI_cont.fun(weightkg)": "\n        userFunctions[\"BMI_cont.fun(weightkg)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](weightlb)), weightlb / 2.2046226218, undefined);\n})\n    ",
                    "BMI_cont.fun(heightm)": "\n        userFunctions[\"BMI_cont.fun(heightm)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](heightin_hft)) && func['not'](func['is.na'](heightin_hin)), (heightin_hft * 12 + heightin_hin) / 39.3701, undefined);\n})\n    ",
                    "BMI_cont.fun": "\n        userFunctions[\"BMI_cont.fun\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))) && func['not'](func['is.na'](userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))), userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) / (userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) * userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func)), undefined);\n})\n    ",
                    "Edu2.fun": "\n        userFunctions[\"Edu2.fun\"] = (function (hs, ed, hdg, userFunctions, func) {\n    return func['ifelse2'](hs == 'hs2', 0, func['ifelse2'](hs == 'hs1' && ed == 'ed2', 1, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && hdg == 'hdg1', 2, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && func['isIn'](hdg, 'hdg2', 'hdg3', 'hdg4', 'hdg5', 'hdg6'), 3, undefined))));\n})\n    ",
                    "EduHSGrad2_cat.fun": "\n        userFunctions[\"EduHSGrad2_cat.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 1, 1, func['ifelse'](func['isIn'](Edu2, 0, 2, 3), 0, undefined));\n})\n    ",
                    "EduSomePS2_cat.fun": "\n        userFunctions[\"EduSomePS2_cat.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 2, 1, func['ifelse'](func['isIn'](Edu2, 0, 1, 3), 0, undefined));\n})\n    ",
                    "EduPSGrad2_cat.fun": "\n        userFunctions[\"EduPSGrad2_cat.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 3, 1, func['ifelse'](func['isIn'](Edu2, 0, 1, 2), 0, undefined));\n})\n    ",
                    "Diabetes_cat.fun": "\n        userFunctions[\"Diabetes_cat.fun\"] = (function (diab, userFunctions, func) {\n    return func['ifelse'](diab == 'diab1', 1, func['ifelse'](diab == 'diab2', 0, undefined));\n})\n    ",
                    "Hypertension_cat.fun": "\n        userFunctions[\"Hypertension_cat.fun\"] = (function (bp, userFunctions, func) {\n    return func['ifelse'](bp == 'bp1', 1, func['ifelse'](bp == 'bp2', 0, undefined));\n})\n    ",
                    "SurveyCycle2_cat.fun": "\n        userFunctions[\"SurveyCycle2_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 2, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle3_cat.fun": "\n        userFunctions[\"SurveyCycle3_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 3, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle4_cat.fun": "\n        userFunctions[\"SurveyCycle4_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 4, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle5_cat.fun": "\n        userFunctions[\"SurveyCycle5_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 5, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle6_cat.fun": "\n        userFunctions[\"SurveyCycle6_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 6, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    "
                },
                "tables": {
                    "CRSpec": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_1": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_2": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_3": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_4": [
                        {
                            "index": "Age_cont",
                            "Mean_male": "50.06",
                            "UserMax_male": "79"
                        },
                        {
                            "index": "AgeC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "AgeC_rcs1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeDaily",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "DailyCig",
                            "Mean_male": "NA",
                            "UserMax_male": "99"
                        },
                        {
                            "index": "AgeDailyStart",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "AgeDailyQuit",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "TypeOfSmoker2",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "PackYears",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "PackYears_cont",
                            "Mean_male": "13.19",
                            "UserMax_male": "109"
                        },
                        {
                            "index": "PackYearsC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "PackYearsC_rcs1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeSimple",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeFormer5Plus_cat",
                            "Mean_male": "0.36",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeFormer0to5_cat",
                            "Mean_male": "0.1",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeCurrent_cat",
                            "Mean_male": "0.28",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeNonC",
                            "Mean_male": "0.25",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeFormer5PlusC_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeFormer0to5C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SmokeCurrentC_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "DrinksLastWeek",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "DrinksLastWeek_cont",
                            "Mean_male": "5.77",
                            "UserMax_male": "53"
                        },
                        {
                            "index": "DrinksLastWeekC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "DrinksLastWeekC_rcs1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "FormerDrinkerNo",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "FormerDrinker_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "FormerDrinkerC_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "FruitVeg",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "FruitVeg_cont",
                            "Mean_male": "3.01",
                            "UserMax_male": "13"
                        },
                        {
                            "index": "FruitVegC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "FruitVegC_rcs1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "Potato_cont",
                            "Mean_male": "0.41",
                            "UserMax_male": "2"
                        },
                        {
                            "index": "PotatoC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "PotatoC_rcs1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "Juice_cont",
                            "Mean_male": "0.92",
                            "UserMax_male": "6"
                        },
                        {
                            "index": "JuiceC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "PhysicalActivity",
                            "Mean_male": "NA",
                            "UserMax_male": "10"
                        },
                        {
                            "index": "PhysicalActivity_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "PhysicalActivityC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "PhysicalActivityC_rcs1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "BMI_cont",
                            "Mean_male": "26.74",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "BMIC_cont",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "BMIC_rcs1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "Edu2",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "EduHSGrad2_cat",
                            "Mean_male": "0.18",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "EduSomePS2_cat",
                            "Mean_male": "0.07",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "EduPSGrad2_cat",
                            "Mean_male": "0.56",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "EduNoHSGrad2",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "EduHSGrad2C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "EduSomePS2C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "EduPSGrad2C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "Diabetes_cat",
                            "Mean_male": "0.06",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "DiabetesNo ",
                            "Mean_male": "0.94",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "DiabetesC_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "Hypertension_cat",
                            "Mean_male": "0.17",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "NoHypertension",
                            "Mean_male": "0.83",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "HypertensionC_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle1",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle2_cat",
                            "Mean_male": "0.16",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle3_cat",
                            "Mean_male": "0.16",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle4_cat",
                            "Mean_male": "0.16",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle5_cat",
                            "Mean_male": "0.16",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle6_cat",
                            "Mean_male": "0.16",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle2C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle3C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle4C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle5C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        },
                        {
                            "index": "SurveyCycle6C_cat",
                            "Mean_male": "NA",
                            "UserMax_male": "NA"
                        }
                    ]
                },
                "baseline": 1,
                "covariates": [
                    {
                        "name": "AgeC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.202211416,
                        "referencePoint": 50.06,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.275298307,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [
                                -24.98064912,
                                -11.98064912,
                                -1.980649122,
                                11.01935088,
                                29.01935088
                            ],
                            "firstVariableCovariate": "AgeC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeC_rcs3",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.346541014,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [
                                -24.98064912,
                                -11.98064912,
                                -1.980649122,
                                11.01935088,
                                29.01935088
                            ],
                            "firstVariableCovariate": "AgeC_rcs1",
                            "variableNumber": 3
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeC_rcs4",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.166315523,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [
                                -24.98064912,
                                -11.98064912,
                                -1.980649122,
                                11.01935088,
                                29.01935088
                            ],
                            "firstVariableCovariate": "AgeC_rcs1",
                            "variableNumber": 4
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PackYearsC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.010390901,
                        "referencePoint": 13.19,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PackYearsC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.033433577,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-13.18715513, -10.18715513, 26.81284487],
                            "firstVariableCovariate": "PackYearsC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SmokeFormer5PlusC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.007048066,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SmokeFormer0to5C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.242839139,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SmokeCurrentC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.751586458,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXPackYearsC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.000198068,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXSmokeFormer5PlusC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": 0.001630288,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXSmokeFormer0to5C_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.006531589,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXSmokeCurrentC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.015062129,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "DrinksLastWeekC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.044555638,
                        "referencePoint": 5.77,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "DrinksLastWeekC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.101714268,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-5.766836745, -3.766836745, 10.23316325],
                            "firstVariableCovariate": "DrinksLastWeekC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXDrinksLastWeekC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": 0.000319002,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "FruitVegC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.166861128,
                        "referencePoint": 3.01,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "FruitVegC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.123503219,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-2.005140474, -0.405140474, 2.394859526],
                            "firstVariableCovariate": "FruitVegC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PotatoC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.588526995,
                        "referencePoint": 0.41,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PotatoC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.617464459,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-0.3127051, -0.1127051, 0.5872949],
                            "firstVariableCovariate": "PotatoC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "JuiceC_cont",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.077295601,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXFruitVegC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": 0.001421184,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXPotatoC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.005935379,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXJuiceC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.0036818,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "BMIC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.074329166,
                        "referencePoint": 26.74,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "BMIC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.05034763,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-4.773158473, -0.438600162, 5.335843968],
                            "firstVariableCovariate": "BMIC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "EduHSGrad2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.051716406,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "EduSomePS2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.0020168,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "EduPSGrad2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.21561924,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXBMIC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.00099187,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "DiabetesC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.571268382,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXDiabetesC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.012706713,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "HypertensionC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.468822594,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXHypertensionC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.016424261,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SurveyCycle2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.079678788,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SurveyCycle3C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.125738939,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SurveyCycle4C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.42295386,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    }
                ],
                "timeMetric": "years",
                "maximumTime": 5
            },
            "predicate": {
                "equation": "predicateResult = obj['sex'] === 'male'",
                "variables": ["sex"]
            }
        },
        {
            "algorithm": {
                "name": "SPoRT female model",
                "derivedFields": [
                    {
                        "fieldType": 1,
                        "name": "Age_cont",
                        "equation": "derived = obj['age'];",
                        "derivedFrom": [
                            {
                                "name": "age",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['Age_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'Age_cont' }), userFunctions, func);",
                        "derivedFrom": ["Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeC_rcs1",
                        "equation": "derived = obj['AgeC_cont'];",
                        "derivedFrom": ["AgeC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "TypeOfSmoker2",
                        "equation": "derived = userFunctions['TypeOfSmoker2.fun'](obj['smk'], obj['evd'], obj['s100'], obj['wcig'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "smk",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "evd",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "s100",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "wcig",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "tsq_ds",
                        "equation": "derived = userFunctions['tsq_ds.fun'](obj['stpo'], obj['stpoy'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "stpo",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "stpoy",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYears",
                        "equation": "derived = func['exists']('TypeOfSmoker2') && func['not'](func['is.na']('TypeOfSmoker2')) ? userFunctions['PackYears1.fun'](obj['TypeOfSmoker2'], obj['Age_cont'], obj['agecigd'], obj['cigdayd'], obj['tsq_ds'], obj['cigdayf'], obj['cigdayo'], obj['dayocc'], obj['agec1'], obj['s100'], userFunctions, func) : func['exists']('SmokeDaily') && func['not'](func['is.na']('SmokeDaily')) ? userFunctions['PackYears2.fun'](obj['SmokeDaily'], obj['Age_cont'], obj['AgeDailyStart'], obj['DailyCig'], obj['AgeDailyQuit'], userFunctions, func) : undefined;",
                        "derivedFrom": [
                            "TypeOfSmoker2",
                            "Age_cont",
                            {
                                "name": "agecigd",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayd",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "tsq_ds",
                            {
                                "name": "cigdayf",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayo",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "dayocc",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "agec1",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "s100",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "SmokeDaily",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "AgeDailyStart",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "DailyCig",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "AgeDailyQuit",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYears_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['PackYears'], getValueFromTable(tables['CRSpec_Mutated_4'], 'UserMax_female', { 'index': 'PackYears_cont' }), userFunctions, func);",
                        "derivedFrom": ["PackYears"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYearsC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['PackYears_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'PackYears_cont' }), userFunctions, func);",
                        "derivedFrom": ["PackYears_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PackYearsC_rcs1",
                        "equation": "derived = obj['PackYearsC_cont'];",
                        "derivedFrom": ["PackYearsC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "smoker",
                        "equation": "derived = userFunctions['smoker.fun'](obj['TypeOfSmoker2'], userFunctions, func);",
                        "derivedFrom": ["TypeOfSmoker2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "eversmoker",
                        "equation": "derived = userFunctions['eversmoker.fun'](obj['TypeOfSmoker2'], userFunctions, func);",
                        "derivedFrom": ["TypeOfSmoker2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeSimple",
                        "equation": "derived = func['exists']('TypeOfSmoker2') && func['not'](func['is.na']('TypeOfSmoker2')) ? userFunctions['SmokeSimple1.fun'](obj['smoker'], obj['eversmoker'], obj['tsq_ds'], obj['TypeOfSmoker2'], userFunctions, func) : func['exists']('SmokeDaily') && func['not'](func['is.na']('SmokeDaily')) ? func['ifelse2'](func['not'](func['is.na'](obj['SmokeDaily'])), userFunctions['SmokeSimple2.fun'](obj['SmokeDaily'], obj['Age_cont'], obj['AgeDailyQuit'], userFunctions, func)) : undefined;",
                        "derivedFrom": [
                            "smoker",
                            "eversmoker",
                            "tsq_ds",
                            "TypeOfSmoker2",
                            {
                                "name": "SmokeDaily",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "Age_cont",
                            {
                                "name": "AgeDailyQuit",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer5Plus_cat",
                        "equation": "derived = func['ifelse2'](func['is.na'](obj['SmokeSimple']), undefined, func['ifelse2'](obj['SmokeSimple'] == 1, 1, 0));",
                        "derivedFrom": ["SmokeSimple"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer0to5_cat",
                        "equation": "derived = func['ifelse2'](func['is.na'](obj['SmokeSimple']), undefined, func['ifelse2'](obj['SmokeSimple'] == 2, 1, 0));",
                        "derivedFrom": ["SmokeSimple"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Former smoker: quit less than 5 years",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeCurrent_cat",
                        "equation": "derived = func['ifelse2'](func['is.na'](obj['SmokeSimple']), undefined, func['ifelse2'](obj['SmokeSimple'] == 3, 1, 0));",
                        "derivedFrom": ["SmokeSimple"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Current smoker",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer5PlusC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SmokeFormer5Plus_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SmokeFormer5Plus_cat' }), userFunctions, func);",
                        "derivedFrom": ["SmokeFormer5Plus_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeFormer0to5C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SmokeFormer0to5_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SmokeFormer0to5_cat' }), userFunctions, func);",
                        "derivedFrom": ["SmokeFormer0to5_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SmokeCurrentC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SmokeCurrent_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SmokeCurrent_cat' }), userFunctions, func);",
                        "derivedFrom": ["SmokeCurrent_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXPackYearsC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['PackYearsC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "PackYearsC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXSmokeFormer5PlusC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['SmokeFormer5PlusC_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "SmokeFormer5PlusC_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXSmokeFormer0to5C_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['SmokeFormer0to5C_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "SmokeFormer0to5C_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXSmokeCurrentC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['SmokeCurrentC_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "SmokeCurrentC_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkm2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkm'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkm",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkt2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkt'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkt",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkw2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkw'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkw",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkr2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkr'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkr",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkf2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkf'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkf",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksa2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksa'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksa",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksu2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek",
                        "equation": "derived = userFunctions['DrinksLastWeek.fun'](obj['drk_drkm2'], obj['drk_drkt2'], obj['drk_drkw2'], obj['drk_drkr2'], obj['drk_drkf2'], obj['drk_drksa2'], obj['drk_drksu2'], obj['dany'], userFunctions, func);",
                        "derivedFrom": [
                            "drk_drkm2",
                            "drk_drkt2",
                            "drk_drkw2",
                            "drk_drkr2",
                            "drk_drkf2",
                            "drk_drksa2",
                            "drk_drksu2",
                            {
                                "name": "dany",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['DrinksLastWeek'], getValueFromTable(tables['CRSpec_Mutated_4'], 'UserMax_female', { 'index': 'DrinksLastWeek_cont' }), userFunctions, func);",
                        "derivedFrom": ["DrinksLastWeek"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeekC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['DrinksLastWeek_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'DrinksLastWeek_cont' }), userFunctions, func);",
                        "derivedFrom": ["DrinksLastWeek_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FormerDrinker_cat",
                        "equation": "derived = func['ifelse2'](obj['dany'] == 'dany2' && obj['d12'] == 'd122' && obj['evdk'] == 'evdk1', 1, func['ifelse2'](obj['dany'] == 'dany1' || obj['d12'] == 'd121' || obj['evdk'] == 'evd2', 0, undefined));",
                        "derivedFrom": [
                            {
                                "name": "dany",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "d12",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "evdk",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Former drinker",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "FormerDrinkerC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['FormerDrinker_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'FormerDrinker_cat' }), userFunctions, func);",
                        "derivedFrom": ["FormerDrinker_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXFormerDrinkerC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['FormerDrinkerC_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "FormerDrinkerC_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXDrinksLastWeekC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['DrinksLastWeekC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "DrinksLastWeekC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dfruit",
                        "equation": "derived = userFunctions['dfruit.fun'](obj['frt'], obj['frtu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "frt",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "frtu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dsalad",
                        "equation": "derived = userFunctions['dsalad.fun'](obj['sal'], obj['salu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "sal",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "salu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dpotato",
                        "equation": "derived = userFunctions['dpotato.fun'](obj['pot'], obj['potu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "pot",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "potu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dcarrot",
                        "equation": "derived = userFunctions['dcarrot.fun'](obj['car'], obj['caru'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "car",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "caru",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dveg",
                        "equation": "derived = userFunctions['dveg.fun'](obj['veg'], obj['vegu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "veg",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "vegu",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg",
                        "equation": "derived = userFunctions['FruitVeg.fun'](obj['dfruit'], obj['dsalad'], obj['dpotato'], obj['dcarrot'], obj['dveg'], userFunctions, func);",
                        "derivedFrom": [
                            "dfruit",
                            "dsalad",
                            "dpotato",
                            "dcarrot",
                            "dveg"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['FruitVeg'], 12, userFunctions, func);",
                        "derivedFrom": ["FruitVeg"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVegC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['FruitVeg_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'FruitVeg_cont' }), userFunctions, func);",
                        "derivedFrom": ["FruitVeg_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVegC_rcs1",
                        "equation": "derived = obj['FruitVegC_cont'];",
                        "derivedFrom": ["FruitVegC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXFruitVegC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['FruitVegC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "FruitVegC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "walk",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa1'], obj['lpam_lpa1'], obj['lpat_lpa1'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa1",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa1",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa1",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "garden",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa2'], obj['lpam_lpa2'], obj['lpat_lpa2'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa2",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa2",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa2",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "swim",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa3'], obj['lpam_lpa3'], obj['lpat_lpa3'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa3",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa3",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa3",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "bike",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa4'], obj['lpam_lpa4'], obj['lpat_lpa4'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa4",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa4",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa4",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dance",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa5'], obj['lpam_lpa5'], obj['lpat_lpa5'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa5",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa5",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa5",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "hexercises",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa6'], obj['lpam_lpa6'], obj['lpat_lpa6'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa6",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa6",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa6",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "hockey",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa7'], obj['lpam_lpa7'], obj['lpat_lpa7'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa7",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa7",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa7",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "skate",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa8'], obj['lpam_lpa8'], obj['lpat_lpa8'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa8",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa8",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa8",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "inline",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa9'], obj['lpam_lpa9'], obj['lpat_lpa9'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa9",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa9",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa9",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "jogrun",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa10'], obj['lpam_lpa10'], obj['lpat_lpa10'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa10",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa10",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa10",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "golf",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa11'], obj['lpam_lpa11'], obj['lpat_lpa11'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa11",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa11",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa11",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "aerobics",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa12'], obj['lpam_lpa12'], obj['lpat_lpa12'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa12",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa12",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa12",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "ski",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa13'], obj['lpam_lpa13'], obj['lpat_lpa13'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa13",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa13",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa13",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "bowl",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa14'], obj['lpam_lpa14'], obj['lpat_lpa14'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa14",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa14",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa14",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "baseball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa15'], obj['lpam_lpa15'], obj['lpat_lpa15'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa15",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa15",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa15",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "tennis",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa16'], obj['lpam_lpa16'], obj['lpat_lpa16'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa16",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa16",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa16",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "weights",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa17'], obj['lpam_lpa17'], obj['lpat_lpa17'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa17",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa17",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa17",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "fishing",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa18'], obj['lpam_lpa18'], obj['lpat_lpa18'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa18",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa18",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa18",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "volleyball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa19'], obj['lpam_lpa19'], obj['lpat_lpa19'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa19",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa19",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa19",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "basketball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa20'], obj['lpam_lpa20'], obj['lpat_lpa20'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa20",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa20",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa20",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "soccer",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa21'], obj['lpam_lpa21'], obj['lpat_lpa21'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa21",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa21",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa21",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "other",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa22'], obj['lpam_lpa22'], obj['lpat_lpa22'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa22",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa22",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa22",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivity",
                        "equation": "derived = userFunctions['PhysicalActivity.fun'](obj['lpa_lpa0'], obj['walk'], obj['garden'], obj['swim'], obj['bike'], obj['dance'], obj['hexercises'], obj['hockey'], obj['skate'], obj['inline'], obj['jogrun'], obj['golf'], obj['aerobics'], obj['ski'], obj['bowl'], obj['baseball'], obj['tennis'], obj['weights'], obj['fishing'], obj['volleyball'], obj['basketball'], obj['soccer'], obj['other'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa0",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "walk",
                            "garden",
                            "swim",
                            "bike",
                            "dance",
                            "hexercises",
                            "hockey",
                            "skate",
                            "inline",
                            "jogrun",
                            "golf",
                            "aerobics",
                            "ski",
                            "bowl",
                            "baseball",
                            "tennis",
                            "weights",
                            "fishing",
                            "volleyball",
                            "basketball",
                            "soccer",
                            "other"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivity_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['PhysicalActivity'], 99.5, userFunctions, func);",
                        "derivedFrom": ["PhysicalActivity"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivityC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['PhysicalActivity_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'PhysicalActivity_cont' }), userFunctions, func);",
                        "derivedFrom": ["PhysicalActivity_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivityC_rcs1",
                        "equation": "derived = obj['PhysicalActivityC_cont'];",
                        "derivedFrom": ["PhysicalActivityC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXPhysicalActivityC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['PhysicalActivityC_cont'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "PhysicalActivityC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "weightlb",
                        "equation": "derived = obj['weightkg'] / 2.20462;",
                        "derivedFrom": [
                            {
                                "name": "weightkg",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "heightin_hft",
                        "equation": "derived = func['floor'](obj['heightm'] * 39.3701 / 12);",
                        "derivedFrom": [
                            {
                                "name": "heightm",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "heightin_hin",
                        "equation": "derived = (obj['heightm'] * 39.3701 / 12 - func['floor'](obj['heightm'] * 39.3701 / 12)) * 12;",
                        "derivedFrom": [
                            {
                                "name": "heightm",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMI_cont",
                        "equation": "derived = userFunctions['BMI_cont.fun'](obj['weightlb'], obj['heightin_hft'], obj['heightin_hin'], userFunctions, func);",
                        "derivedFrom": [
                            "weightlb",
                            "heightin_hft",
                            "heightin_hin"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMIC_cont",
                        "equation": "derived = userFunctions['Center.fun'](obj['BMI_cont'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'BMI_cont' }), userFunctions, func);",
                        "derivedFrom": ["BMI_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMIC_rcs1",
                        "equation": "derived = obj['BMIC_cont'];",
                        "derivedFrom": ["BMIC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXBMIC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['BMIC_rcs1'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "BMIC_rcs1"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Edu2",
                        "equation": "derived = userFunctions['Edu2.fun'](obj['hs'], obj['ed'], obj['hdg'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "hs",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "ed",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "hdg",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduHSGrad2_cat",
                        "equation": "derived = userFunctions['EduHSGrad2_cat.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "High school graduate",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduSomePS2_cat",
                        "equation": "derived = userFunctions['EduSomePS2_cat.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Some post-secondary education",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduPSGrad2_cat",
                        "equation": "derived = userFunctions['EduPSGrad2_cat.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Post-secondary school graduate",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduHSGrad2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['EduHSGrad2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'EduHSGrad2_cat' }), userFunctions, func);",
                        "derivedFrom": ["EduHSGrad2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduSomePS2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['EduSomePS2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'EduSomePS2_cat' }), userFunctions, func);",
                        "derivedFrom": ["EduSomePS2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduPSGrad2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['EduPSGrad2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'EduPSGrad2_cat' }), userFunctions, func);",
                        "derivedFrom": ["EduPSGrad2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Diabetes_cat",
                        "equation": "derived = userFunctions['Diabetes_cat.fun'](obj['diab'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "diab",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Has diabetes",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "DiabetesC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['Diabetes_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'Diabetes_cat' }), userFunctions, func);",
                        "derivedFrom": ["Diabetes_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXDiabetesC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['AgeC_cont'], obj['DiabetesC_cat'], userFunctions, func);",
                        "derivedFrom": ["AgeC_cont", "DiabetesC_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Hypertension_cat",
                        "equation": "derived = userFunctions['Hypertension_cat.fun'](obj['bp'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "bp",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Has hypertension",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "HypertensionC_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['Hypertension_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'Hypertension_cat' }), userFunctions, func);",
                        "derivedFrom": ["Hypertension_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeCXHypertensionC_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['HypertensionC_cat'], obj['AgeC_cont'], userFunctions, func);",
                        "derivedFrom": ["HypertensionC_cat", "AgeC_cont"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle2_cat",
                        "equation": "derived = userFunctions['SurveyCycle2_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Canadian Community Health Survey cycle 2.1",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle3_cat",
                        "equation": "derived = userFunctions['SurveyCycle3_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Canadian Community Health Survey cycle 3.1",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle4_cat",
                        "equation": "derived = userFunctions['SurveyCycle4_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": {
                            "label": "Canadian Community Health Survey cycle 4.1",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle5_cat",
                        "equation": "derived = userFunctions['SurveyCycle5_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle6_cat",
                        "equation": "derived = userFunctions['SurveyCycle6_cat.fun'](obj['SurveyCycle'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "SurveyCycle",
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle2C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle2_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SurveyCycle2_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle2_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle3C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle3_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SurveyCycle3_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle3_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle4C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle4_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SurveyCycle4_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle4_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle5C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle5_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SurveyCycle5_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle5_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "SurveyCycle6C_cat",
                        "equation": "derived = userFunctions['Center.fun'](obj['SurveyCycle6_cat'], getValueFromTable(tables['CRSpec_Mutated_4'], 'Mean_female', { 'index': 'SurveyCycle6_cat' }), userFunctions, func);",
                        "derivedFrom": ["SurveyCycle6_cat"],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    }
                ],
                "userFunctions": {
                    "Center.fun": "\n        userFunctions[\"Center.fun\"] = (function (uncentered, mean, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](uncentered)), uncentered - mean, undefined);\n})\n    ",
                    "Interact.fun": "\n        userFunctions[\"Interact.fun\"] = (function (var1, var2, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](var1)) && func['not'](func['is.na'](var2)), var1 * var2, undefined);\n})\n    ",
                    "Max.fun": "\n        userFunctions[\"Max.fun\"] = (function (var1, max, userFunctions, func) {\n    return func['ifelse2'](var1 > max, max, var1);\n})\n    ",
                    "NA0.fun": "\n        userFunctions[\"NA0.fun\"] = (function (var1, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](var1), 0, var1);\n})\n    ",
                    "falseifNA": "\n        userFunctions[\"falseifNA\"] = (function (x, userFunctions, func) {\n    return func['ifelse'](func['is.na'](x), false, x);\n})\n    ",
                    "Age_spline.fun(Age_spline)": "\n        userFunctions[\"Age_spline.fun(Age_spline)\"] = (function (Age_cont, point, userFunctions, func) {\n    return func['ifelse2'](Age_cont <= point, 0, func['ifelse2'](Age_cont > point, Age_cont - point, undefined));\n})\n    ",
                    "TypeOfSmoker2.fun": "\n        userFunctions[\"TypeOfSmoker2.fun\"] = (function (smk, evd, s100, wcig, userFunctions, func) {\n    return func['ifelse2'](wcig == 'wcig2', 6, func['ifelse2'](smk == 'smk1', 1, func['ifelse2'](smk == 'smk2' && evd == 'evd1', 2, func['ifelse2'](smk == 'smk2' && evd == 'evd2', 3, func['ifelse2'](smk == 'smk3' && evd == 'evd1', 4, func['ifelse2'](smk == 'smk3' && evd == 'evd2' && s100 == 's1001', 5, func['ifelse2'](smk == 'smk3' && evd == 'evd2' && s100 == 's1002', 6, undefined)))))));\n})\n    ",
                    "tsq_ds.fun": "\n        userFunctions[\"tsq_ds.fun\"] = (function (stpo, stpoy, userFunctions, func) {\n    return func['ifelse'](stpo == 'stpo1', 0.5, func['ifelse'](stpo == 'stpo2', 1.5, func['ifelse'](stpo == 'stpo3', 2.5, func['ifelse'](stpo == 'stpo4', stpoy, undefined))));\n})\n    ",
                    "PackYears1.fun": "\n        userFunctions[\"PackYears1.fun\"] = (function (TypeOfSmoker2, Age_cont, agecigd, cigdayd, tsq_ds, cigdayf, cigdayo, dayocc, agec1, s100, userFunctions, func) {\n    return func['ifelse2'](TypeOfSmoker2 == 1, func['pmax']((Age_cont - agecigd) * (cigdayd / 20), 0.0137), func['ifelse2'](TypeOfSmoker2 == 2, func['pmax']((Age_cont - agecigd - tsq_ds) * (cigdayf / 20), 0.0137) + func['pmax'](cigdayo * dayocc / 30, 1) * tsq_ds, func['ifelse2'](TypeOfSmoker2 == 3, func['pmax'](cigdayo * dayocc / 30, 1) / 20 * (Age_cont - agec1), func['ifelse2'](TypeOfSmoker2 == 4, func['pmax']((Age_cont - agecigd - tsq_ds) * (cigdayf / 20), 0.0137), func['ifelse2'](TypeOfSmoker2 == 5 && s100 == 's1001', 0.0137, func['ifelse2'](TypeOfSmoker2 == 5 && s100 == 's1002', 0.007, func['ifelse2'](TypeOfSmoker2 == 6, 0, undefined)))))));\n})\n    ",
                    "PackYears2.fun": "\n        userFunctions[\"PackYears2.fun\"] = (function (SmokeDaily, Age_cont, AgeDailyStart, DailyCig, AgeDailyQuit, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1, (Age_cont - AgeDailyStart) * (DailyCig / 20), func['ifelse2'](SmokeDaily == 2, (AgeDailyQuit - AgeDailyStart) * (DailyCig / 20), undefined)));\n})\n    ",
                    "smoker.fun(smoker)": "\n        userFunctions[\"smoker.fun(smoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3), 1, func['ifelse'](func['isIn'](TypeOfSmoker2, 4, 5, 6), 0, undefined));\n})\n    ",
                    "smoker.fun": "\n        userFunctions[\"smoker.fun\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return userFunctions['smoker.fun(smoker)'](TypeOfSmoker2, userFunctions, func);\n})\n    ",
                    "eversmoker.fun(eversmoker)": "\n        userFunctions[\"eversmoker.fun(eversmoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3, 4, 5), 1, func['ifelse'](TypeOfSmoker2 == 6, 0, undefined));\n})\n    ",
                    "eversmoker.fun": "\n        userFunctions[\"eversmoker.fun\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return userFunctions['eversmoker.fun(eversmoker)'](TypeOfSmoker2, userFunctions, func);\n})\n    ",
                    "SmokeSimple1.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple1.fun(SmokeSimple)\"] = (function (smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse2'](smoker == 0 && eversmoker == 0, 0, func['ifelse2'](smoker == 1 && eversmoker == 1, 1, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds < 5 || TypeOfSmoker2 == 5, 2, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds >= 5, 3, undefined))));\n})\n    ",
                    "SmokeSimple1.fun": "\n        userFunctions[\"SmokeSimple1.fun\"] = (function (smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func) {\n    return userFunctions['SmokeSimple1.fun(SmokeSimple)'](smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func);\n})\n    ",
                    "SmokeSimple2.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple2.fun(SmokeSimple)\"] = (function (SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1, 1, func['ifelse2'](SmokeDaily == 2 && Age_cont < AgeDailyQuit + 5, 2, func['ifelse2'](SmokeDaily == 2 && Age_cont > AgeDailyQuit + 5, 3, undefined))));\n})\n    ",
                    "SmokeSimple2.fun": "\n        userFunctions[\"SmokeSimple2.fun\"] = (function (SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func) {\n    return userFunctions['SmokeSimple2.fun(SmokeSimple)'](SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func);\n})\n    ",
                    "DrinksLastWeek.fun": "\n        userFunctions[\"DrinksLastWeek.fun\"] = (function (drk_drkm2, drk_drkt2, drk_drkw2, drk_drkr2, drk_drkf2, drk_drksa2, drk_drksu2, dany, userFunctions, func) {\n    return func['ifelse2'](dany == 'dany2', 0, func['ifelse2'](dany == 'dany1', drk_drkm2 + drk_drkt2 + drk_drkw2 + drk_drkr2 + drk_drkf2 + drk_drksa2 + drk_drksu2, undefined));\n})\n    ",
                    "dfruit.fun": "\n        userFunctions[\"dfruit.fun\"] = (function (frt, frtu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](frt), undefined, func['ifelse'](frtu == 'frtd', frt, func['ifelse'](frtu == 'frtw', frt / 7, func['ifelse'](frtu == 'frtm', frt / 30, func['ifelse'](frtu == 'frty', frt / 365, undefined)))));\n})\n    ",
                    "dsalad.fun": "\n        userFunctions[\"dsalad.fun\"] = (function (sal, salu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](sal), undefined, func['ifelse'](salu == 'sald', sal, func['ifelse'](salu == 'salw', sal / 7, func['ifelse'](salu == 'salm', sal / 30, func['ifelse'](salu == 'saly', sal / 365, undefined)))));\n})\n    ",
                    "dpotato.fun": "\n        userFunctions[\"dpotato.fun\"] = (function (pot, potu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](pot), undefined, func['ifelse'](potu == 'potd', pot, func['ifelse'](potu == 'potw', pot / 7, func['ifelse'](potu == 'potm', pot / 30, func['ifelse'](potu == 'poty', pot / 365, undefined)))));\n})\n    ",
                    "dcarrot.fun": "\n        userFunctions[\"dcarrot.fun\"] = (function (car, caru, userFunctions, func) {\n    return func['ifelse'](func['is.na'](car), undefined, func['ifelse'](caru == 'card', car, func['ifelse'](caru == 'carw', car / 7, func['ifelse'](caru == 'carm', car / 30, func['ifelse'](caru == 'cary', car / 365, undefined)))));\n})\n    ",
                    "dveg.fun": "\n        userFunctions[\"dveg.fun\"] = (function (veg, vegu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](veg), undefined, func['ifelse'](vegu == 'vegd', veg, func['ifelse'](vegu == 'vegw', veg / 7, func['ifelse'](vegu == 'vegm', veg / 30, func['ifelse'](vegu == 'vegy', veg / 365, undefined)))));\n})\n    ",
                    "FruitVeg.fun": "\n        userFunctions[\"FruitVeg.fun\"] = (function (dfruit, dsalad, dpotato, dcarrot, dveg, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](dfruit)) && func['not'](func['is.na'](dsalad)) && func['not'](func['is.na'](dpotato)) && func['not'](func['is.na'](dcarrot)) && func['not'](func['is.na'](dveg)), dfruit + dsalad + dpotato + dcarrot + dveg, undefined);\n})\n    ",
                    "Activity.fun": "\n        userFunctions[\"Activity.fun\"] = (function (lpa, lpam, lpat, userFunctions, func) {\n    return func['ifelse2'](lpa == 'Yes' && lpam == 'lpa15', lpat * 0.2167 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa30', lpat * 0.3833 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa60', lpat * 0.75 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa61', lpat * 1 / 3, 0))));\n})\n    ",
                    "PhysicalActivity.fun(noactivity)": "\n        userFunctions[\"PhysicalActivity.fun(noactivity)\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return func['ifelse2'](lpa_lpa0 == 'Yes' && walk == 0 && garden == 0 && swim == 0 && bike == 0 && dance == 0 && hexercises == 0 && hockey == 0 && skate == 0 && inline == 0 && jogrun == 0 && golf == 0 && aerobics == 0 && ski == 0 && bowl == 0 && baseball == 0 && tennis == 0 && weights == 0 && fishing == 0 && volleyball == 0 && basketball == 0 && soccer == 0 && other == 0, 1, func['ifelse2'](func['is.na'](lpa_lpa0) && walk == 0 && garden == 0 && swim == 0 && bike == 0 && dance == 0 && hexercises == 0 && hockey == 0 && skate == 0 && inline == 0 && jogrun == 0 && golf == 0 && aerobics == 0 && ski == 0 && bowl == 0 && baseball == 0 && tennis == 0 && weights == 0 && fishing == 0 && volleyball == 0 && basketball == 0 && soccer == 0 && other == 0, undefined, 0));\n})\n    ",
                    "PhysicalActivity.fun(PhysicalActivity)": "\n        userFunctions[\"PhysicalActivity.fun(PhysicalActivity)\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](userFunctions['PhysicalActivity.fun(noactivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func)), undefined, func['ifelse2'](userFunctions['PhysicalActivity.fun(noactivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) == 1, 0, func['ifelse2'](3 * walk / 30 + 3 * garden / 30 + 3 * swim / 30 + 4 * bike / 30 + 3 * dance / 30 + 3 * hexercises / 30 + 6 * hockey / 30 + 4 * skate / 30 + 5 * inline / 30 + 9.5 * jogrun / 30 + 4 * golf / 30 + 4 * aerobics / 30 + 4 * ski / 30 + 2 * bowl / 30 + 3 * baseball / 30 + 4 * tennis / 30 + 3 * weights / 30 + 3 * fishing / 30 + 5 * volleyball / 30 + 6 * basketball / 30 + 5 * soccer / 30 + 4 * other / 30 > 10, 10, 3 * walk / 30 + 3 * garden / 30 + 3 * swim / 30 + 4 * bike / 30 + 3 * dance / 30 + 3 * hexercises / 30 + 6 * hockey / 30 + 4 * skate / 30 + 5 * inline / 30 + 9.5 * jogrun / 30 + 4 * golf / 30 + 4 * aerobics / 30 + 4 * ski / 30 + 2 * bowl / 30 + 3 * baseball / 30 + 4 * tennis / 30 + 3 * weights / 30 + 3 * fishing / 30 + 5 * volleyball / 30 + 6 * basketball / 30 + 5 * soccer / 30 + 4 * other / 30)));\n})\n    ",
                    "PhysicalActivity.fun": "\n        userFunctions[\"PhysicalActivity.fun\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return userFunctions['PhysicalActivity.fun(PhysicalActivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func);\n})\n    ",
                    "PhysicalActivityLog_cont.fun(PhysicalActivity_cont)": "\n        userFunctions[\"PhysicalActivityLog_cont.fun(PhysicalActivity_cont)\"] = (function (PhysicalActivity, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](PhysicalActivity)), func['log'](1 + PhysicalActivity) / func['log'](10), undefined);\n})\n    ",
                    "BMI_cont.fun(weightkg)": "\n        userFunctions[\"BMI_cont.fun(weightkg)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](weightlb)), weightlb / 2.2046226218, undefined);\n})\n    ",
                    "BMI_cont.fun(heightm)": "\n        userFunctions[\"BMI_cont.fun(heightm)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](heightin_hft)) && func['not'](func['is.na'](heightin_hin)), (heightin_hft * 12 + heightin_hin) / 39.3701, undefined);\n})\n    ",
                    "BMI_cont.fun": "\n        userFunctions[\"BMI_cont.fun\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))) && func['not'](func['is.na'](userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))), userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) / (userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) * userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func)), undefined);\n})\n    ",
                    "Edu2.fun": "\n        userFunctions[\"Edu2.fun\"] = (function (hs, ed, hdg, userFunctions, func) {\n    return func['ifelse2'](hs == 'hs2', 0, func['ifelse2'](hs == 'hs1' && ed == 'ed2', 1, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && hdg == 'hdg1', 2, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && func['isIn'](hdg, 'hdg2', 'hdg3', 'hdg4', 'hdg5', 'hdg6'), 3, undefined))));\n})\n    ",
                    "EduHSGrad2_cat.fun": "\n        userFunctions[\"EduHSGrad2_cat.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 1, 1, func['ifelse'](func['isIn'](Edu2, 0, 2, 3), 0, undefined));\n})\n    ",
                    "EduSomePS2_cat.fun": "\n        userFunctions[\"EduSomePS2_cat.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 2, 1, func['ifelse'](func['isIn'](Edu2, 0, 1, 3), 0, undefined));\n})\n    ",
                    "EduPSGrad2_cat.fun": "\n        userFunctions[\"EduPSGrad2_cat.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 3, 1, func['ifelse'](func['isIn'](Edu2, 0, 1, 2), 0, undefined));\n})\n    ",
                    "Diabetes_cat.fun": "\n        userFunctions[\"Diabetes_cat.fun\"] = (function (diab, userFunctions, func) {\n    return func['ifelse'](diab == 'diab1', 1, func['ifelse'](diab == 'diab2', 0, undefined));\n})\n    ",
                    "Hypertension_cat.fun": "\n        userFunctions[\"Hypertension_cat.fun\"] = (function (bp, userFunctions, func) {\n    return func['ifelse'](bp == 'bp1', 1, func['ifelse'](bp == 'bp2', 0, undefined));\n})\n    ",
                    "SurveyCycle2_cat.fun": "\n        userFunctions[\"SurveyCycle2_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 2, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle3_cat.fun": "\n        userFunctions[\"SurveyCycle3_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 3, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle4_cat.fun": "\n        userFunctions[\"SurveyCycle4_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 4, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle5_cat.fun": "\n        userFunctions[\"SurveyCycle5_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 5, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    ",
                    "SurveyCycle6_cat.fun": "\n        userFunctions[\"SurveyCycle6_cat.fun\"] = (function (SurveyCycle, userFunctions, func) {\n    return func['ifelse'](SurveyCycle == 6, 1, func['ifelse'](func['not'](func['is.na'](SurveyCycle)), 0, undefined));\n})\n    "
                },
                "tables": {
                    "CRSpec": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_1": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_2": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_3": [
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {},
                        {}
                    ],
                    "CRSpec_Mutated_4": [
                        {
                            "index": "Age_cont",
                            "Mean_female": "47.98",
                            "UserMax_female": "79"
                        },
                        {
                            "index": "AgeC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "AgeC_rcs1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeDaily",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "DailyCig",
                            "Mean_female": "NA",
                            "UserMax_female": "99"
                        },
                        {
                            "index": "AgeDailyStart",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "AgeDailyQuit",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "TypeOfSmoker2",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "PackYears",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "PackYears_cont",
                            "Mean_female": "8.17",
                            "UserMax_female": "79"
                        },
                        {
                            "index": "PackYearsC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "PackYearsC_rcs1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeSimple",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeFormer5Plus_cat",
                            "Mean_female": "0.31",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeFormer0to5_cat",
                            "Mean_female": "0.07",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeCurrent_cat",
                            "Mean_female": "0.23",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeNonC",
                            "Mean_female": "0.38",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeFormer5PlusC_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeFormer0to5C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SmokeCurrentC_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "DrinksLastWeek",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "DrinksLastWeek_cont",
                            "Mean_female": "2.22",
                            "UserMax_female": "26"
                        },
                        {
                            "index": "DrinksLastWeekC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "DrinksLastWeekC_rcs1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "FormerDrinkerNo",
                            "Mean_female": "0.84",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "FormerDrinker_cat",
                            "Mean_female": "0.16",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "FormerDrinkerC_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "FruitVeg",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "FruitVeg_cont",
                            "Mean_female": "3.97",
                            "UserMax_female": "12"
                        },
                        {
                            "index": "FruitVegC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "FruitVegC_rcs1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "Potato_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "2"
                        },
                        {
                            "index": "PotatoC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "PotatoC_rcs1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "Juice_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "6"
                        },
                        {
                            "index": "JuiceC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "PhysicalActivity",
                            "Mean_female": "NA",
                            "UserMax_female": "10"
                        },
                        {
                            "index": "PhysicalActivity_cont",
                            "Mean_female": "1.87",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "PhysicalActivityC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "PhysicalActivityC_rcs1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "BMI_cont",
                            "Mean_female": "25.71",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "BMIC_cont",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "BMIC_rcs1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "Edu2",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "EduHSGrad2_cat",
                            "Mean_female": "0.2",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "EduSomePS2_cat",
                            "Mean_female": "0.07",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "EduPSGrad2_cat",
                            "Mean_female": "0.53",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "EduNoHSGrad2",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "EduHSGrad2C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "EduSomePS2C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "EduPSGrad2C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "Diabetes_cat",
                            "Mean_female": "0.05",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "DiabetesNo ",
                            "Mean_female": "0.95",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "DiabetesC_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "Hypertension_cat",
                            "Mean_female": "0.2",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "NoHypertension",
                            "Mean_female": "0.8",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "HypertensionC_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle1",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle2_cat",
                            "Mean_female": "0.16",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle3_cat",
                            "Mean_female": "0.16",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle4_cat",
                            "Mean_female": "0.16",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle5_cat",
                            "Mean_female": "0.16",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle6_cat",
                            "Mean_female": "0.16",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle2C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle3C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle4C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle5C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        },
                        {
                            "index": "SurveyCycle6C_cat",
                            "Mean_female": "NA",
                            "UserMax_female": "NA"
                        }
                    ]
                },
                "baseline": 0.057,
                "covariates": [
                    {
                        "name": "AgeC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.123176401,
                        "referencePoint": 47.98,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.105820826,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [
                                -27.0556277,
                                -13.0556277,
                                -1.055627698,
                                11.9443723,
                                29.9443723
                            ],
                            "firstVariableCovariate": "AgeC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeC_rcs3",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.251246772,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [
                                -27.0556277,
                                -13.0556277,
                                -1.055627698,
                                11.9443723,
                                29.9443723
                            ],
                            "firstVariableCovariate": "AgeC_rcs1",
                            "variableNumber": 3
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeC_rcs4",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.203623822,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [
                                -27.0556277,
                                -13.0556277,
                                -1.055627698,
                                11.9443723,
                                29.9443723
                            ],
                            "firstVariableCovariate": "AgeC_rcs1",
                            "variableNumber": 4
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PackYearsC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.020930268,
                        "referencePoint": 8.17,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PackYearsC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -15.47108662,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-8.168189355, -8.161189355, 20.33181065],
                            "firstVariableCovariate": "PackYearsC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SmokeFormer5PlusC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.072904242,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SmokeFormer0to5C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.148868238,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SmokeCurrentC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 1.058286503,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXPackYearsC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.000332926,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXSmokeFormer5PlusC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": 0.004885365,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXSmokeFormer0to5C_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": 0.001401608,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXSmokeCurrentC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.022729523,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "DrinksLastWeekC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.01595039,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "FormerDrinkerC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.271622197,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXDrinksLastWeekC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.0000412,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXFormerDrinkerC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.00632852,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "FruitVegC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.021483994,
                        "referencePoint": 3.97,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "FruitVegC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.054164245,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-2.468725652, -0.468725652, 3.031274348],
                            "firstVariableCovariate": "FruitVegC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXFruitVegC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.001019788,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PhysicalActivityC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.16327063,
                        "referencePoint": 1.87,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "PhysicalActivityC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.157796713,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-1.767511319, -0.167511319, 2.632488681],
                            "firstVariableCovariate": "PhysicalActivityC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXPhysicalActivityC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": 0.00147874,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "BMIC_rcs1",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.021108884,
                        "referencePoint": 25.71,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "BMIC_rcs2",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.003490039,
                        "referencePoint": null,
                        "customFunction": {
                            "knots": [-5.68421137, -0.949302364, 6.940697636],
                            "firstVariableCovariate": "BMIC_rcs1",
                            "variableNumber": 2
                        },
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXBMIC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.000528601,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "EduHSGrad2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.071380121,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "EduSomePS2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.056600829,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "EduPSGrad2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.19204944,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "DiabetesC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.954819373,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXDiabetesC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.022063172,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "HypertensionC_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.374209414,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "AgeCXHypertensionC_int",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.004832972,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SurveyCycle2C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.114515716,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SurveyCycle3C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.292834954,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    },
                    {
                        "name": "SurveyCycle4C_cat",
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.443219161,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": []
                    }
                ],
                "timeMetric": "years",
                "maximumTime": 5
            },
            "predicate": {
                "equation": "predicateResult = obj['sex'] === 'female'",
                "variables": ["sex"]
            }
        }
    ]
}
