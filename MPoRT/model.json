{
    "name": "MPoRT v1",
    "algorithms": [
        {
            "algorithm": {
                "name": "MPoRT male model",
                "derivedFields": [
                    {
                        "fieldType": 1,
                        "name": "Age_cont",
                        "equation": "derived = obj['age'];",
                        "derivedFrom": [
                            {
                                "name": "age",
                                "intervals": [{
                                    "lowerMargin": {
                                        "margin": 20,
                                        "isOpen": false
                                    },
                                    "higherMargin": {
                                        "margin": 79,
                                        "isOpen": false
                                    }
                                }],
                                "isRequired": false,
                                "metadata": {
                                    "label": "Age",
                                    "shortLabel": ""
                                },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Age_spline",
                        "equation": "derived = userFunctions['Age_spline.fun'](obj['Age_cont'], 65, userFunctions, func);",
                        "derivedFrom": ["Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkm2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkm'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkm",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkt2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkt'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkt",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkw2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkw'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkw",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkr2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkr'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkr",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkf2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkf'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkf",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksa2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksa'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksa",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksu2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek",
                        "equation": "derived = userFunctions['DrinksLastWeek.fun'](obj['drk_drkm2'], obj['drk_drkt2'], obj['drk_drkw2'], obj['drk_drkr2'], obj['drk_drkf2'], obj['drk_drksa2'], obj['drk_drksu2'], obj['dany'], userFunctions, func);",
                        "derivedFrom": [
                            "drk_drkm2",
                            "drk_drkt2",
                            "drk_drkw2",
                            "drk_drkr2",
                            "drk_drkf2",
                            "drk_drksa2",
                            "drk_drksu2",
                            {
                                "name": "dany",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['DrinksLastWeek'], 53, userFunctions, func);",
                        "derivedFrom": ["DrinksLastWeek"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Binge",
                        "equation": "derived = userFunctions['Binge.fun'](obj['db'], obj['dany'], obj['drk_drkm2'], obj['drk_drkt2'], obj['drk_drkw2'], obj['drk_drkr2'], obj['drk_drkf2'], obj['drk_drksa2'], obj['drk_drksu2'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "db",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "dany",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "drk_drkm2",
                            "drk_drkt2",
                            "drk_drkw2",
                            "drk_drkr2",
                            "drk_drkf2",
                            "drk_drksa2",
                            "drk_drksu2"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AlcoholType",
                        "equation": "derived = userFunctions['AlcoholType.fun'](obj['Binge'], obj['dany'], obj['DrinksLastWeek_cont'], 3, 21, userFunctions, func);",
                        "derivedFrom": [
                            "Binge",
                            {
                                "name": "dany",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "DrinksLastWeek_cont"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "0",
                                "displayValue": "Non/light drinker",
                                "description": "Males: <4 drinks/week; Females: <3 drinks/week"
                            },
                            {
                                "value": "1",
                                "displayValue": "Moderate drinker",
                                "description": "Males: 4-21 drinks/week; Females: 3 to 14 drinks/week"
                            },
                            {
                                "value": "2",
                                "displayValue": "Heavy drinker",
                                "description": "Males: >21 drinks/week; Females: >14 drinks/week"
                            }
                        ],
                        "metadata": {
                            "label": "Alcohol Status",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "AlcoholMod_cat",
                        "equation": "derived = userFunctions['AlcoholMod_cat.fun'](obj['AlcoholType'], userFunctions, func);",
                        "derivedFrom": ["AlcoholType"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate drinker",
                                "description": "Males: 4-21 drinks/week; Females: 3 to 14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "Mod. alcohol",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "AlcoholHeavy_cat",
                        "equation": "derived = userFunctions['AlcoholHeavy_cat.fun'](obj['AlcoholType'], userFunctions, func);",
                        "derivedFrom": ["AlcoholType"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Heavy drinker",
                                "description": "Males: >21 drinks/week; Females: >14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "Heavy alcohol",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "QuitTime",
                        "equation": "derived = userFunctions['QuitTime.fun'](obj['stpn'], obj['stpny'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "stpn",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "stpny",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": {
                            "label": "Smoking Quit Time",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "TypeOfSmoker",
                        "equation": "derived = userFunctions['TypeOfSmoker.fun'](obj['smk'], obj['evd'], obj['s100'], obj['cigdayf'], obj['cigdayd'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "smk",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "evd",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "s100",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayf",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayd",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "QSLightCont_df",
                        "equation": "derived = func['ifelse'](func['not'](func['is.na'](obj['TypeOfSmoker'])), userFunctions['QSLightCont_df1.fun'](obj['TypeOfSmoker'], obj['QuitTime'], 15, userFunctions, func), func['ifelse'](func['not'](func['is.na'](obj['SmokeDaily'])), userFunctions['QSLightCont_df2.fun'](obj['SmokeDaily'], obj['DailyCig'], obj['Age_cont'], obj['AgeDailyQuit'], 15, userFunctions, func), undefined));",
                        "derivedFrom": [
                            "TypeOfSmoker",
                            "QuitTime",
                            {
                                "name": "SmokeDaily",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "DailyCig",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "Age_cont",
                            {
                                "name": "AgeDailyQuit",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "metadata": {
                            "label": "Light smoker",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "QSHeavyCont_df",
                        "equation": "derived = func['ifelse'](func['not'](func['is.na'](obj['TypeOfSmoker'])), userFunctions['QSHeavyCont_df1.fun'](obj['TypeOfSmoker'], obj['QuitTime'], 15, userFunctions, func), func['ifelse'](func['not'](func['is.na'](obj['SmokeDaily'])), userFunctions['QSHeavyCont_df2.fun'](obj['SmokeDaily'], obj['DailyCig'], obj['Age_cont'], obj['AgeDailyQuit'], 15, userFunctions, func), undefined));",
                        "derivedFrom": [
                            "TypeOfSmoker",
                            "QuitTime",
                            {
                                "name": "SmokeDaily",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "DailyCig",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "Age_cont",
                            {
                                "name": "AgeDailyQuit",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "metadata": {
                            "label": "Heavy smoker",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "dfruit",
                        "equation": "derived = userFunctions['dfruit.fun'](obj['frt'], obj['frtu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "frt",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "frtu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dsalad",
                        "equation": "derived = userFunctions['dsalad.fun'](obj['sal'], obj['salu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "sal",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "salu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dpotato",
                        "equation": "derived = userFunctions['dpotato.fun'](obj['pot'], obj['potu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "pot",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "potu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dcarrot",
                        "equation": "derived = userFunctions['dcarrot.fun'](obj['car'], obj['caru'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "car",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "caru",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dveg",
                        "equation": "derived = userFunctions['dveg.fun'](obj['veg'], obj['vegu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "veg",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "vegu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "djuice",
                        "equation": "derived = userFunctions['djuice.fun'](obj['jui'], obj['juiu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "jui",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "juiu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg",
                        "equation": "derived = userFunctions['FruitVeg.fun'](obj['dfruit'], obj['dsalad'], obj['dpotato'], obj['dcarrot'], obj['dveg'], userFunctions, func);",
                        "derivedFrom": [
                            "dfruit",
                            "dsalad",
                            "dpotato",
                            "dcarrot",
                            "dveg"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg8Max",
                        "equation": "derived = userFunctions['FruitVeg8Max.fun'](obj['FruitVeg'], userFunctions, func);",
                        "derivedFrom": ["FruitVeg"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "HighPotatoFlag",
                        "equation": "derived = userFunctions['HighPotatoFlag.fun'](obj['dpotato'], userFunctions, func);",
                        "derivedFrom": ["dpotato"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "NoCarrotFlag",
                        "equation": "derived = userFunctions['NoCarrotFlag.fun'](obj['dcarrot'], userFunctions, func);",
                        "derivedFrom": ["dcarrot"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "HighJuice",
                        "equation": "derived = userFunctions['HighJuice.fun'](obj['djuice'], userFunctions, func);",
                        "derivedFrom": ["djuice"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DietScore",
                        "equation": "derived = userFunctions['DietScore.fun'](obj['FruitVeg8Max'], obj['HighPotatoFlag'], obj['NoCarrotFlag'], obj['HighJuice'], userFunctions, func);",
                        "derivedFrom": [
                            "FruitVeg8Max",
                            "HighPotatoFlag",
                            "NoCarrotFlag",
                            "HighJuice"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "metadata": { "label": "Diet", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DietScore_cont",
                        "equation": "derived = userFunctions['DietScore_cont.fun'](obj['DietScore'], userFunctions, func);",
                        "derivedFrom": ["DietScore"],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "metadata": { "label": "Diet", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "walk",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa1'], obj['lpam_lpa1'], obj['lpat_lpa1'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa1",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa1",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa1",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "garden",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa2'], obj['lpam_lpa2'], obj['lpat_lpa2'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa2",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa2",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa2",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "swim",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa3'], obj['lpam_lpa3'], obj['lpat_lpa3'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa3",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa3",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa3",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "bike",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa4'], obj['lpam_lpa4'], obj['lpat_lpa4'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa4",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa4",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa4",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dance",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa5'], obj['lpam_lpa5'], obj['lpat_lpa5'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa5",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa5",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa5",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "hexercises",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa6'], obj['lpam_lpa6'], obj['lpat_lpa6'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa6",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa6",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa6",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "hockey",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa7'], obj['lpam_lpa7'], obj['lpat_lpa7'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa7",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa7",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa7",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "skate",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa8'], obj['lpam_lpa8'], obj['lpat_lpa8'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa8",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa8",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa8",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "inline",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa9'], obj['lpam_lpa9'], obj['lpat_lpa9'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa9",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa9",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa9",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "jogrun",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa10'], obj['lpam_lpa10'], obj['lpat_lpa10'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa10",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa10",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa10",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "golf",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa11'], obj['lpam_lpa11'], obj['lpat_lpa11'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa11",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa11",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa11",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "aerobics",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa12'], obj['lpam_lpa12'], obj['lpat_lpa12'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa12",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa12",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa12",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "ski",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa13'], obj['lpam_lpa13'], obj['lpat_lpa13'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa13",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa13",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa13",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "bowl",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa14'], obj['lpam_lpa14'], obj['lpat_lpa14'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa14",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa14",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa14",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "baseball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa15'], obj['lpam_lpa15'], obj['lpat_lpa15'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa15",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa15",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa15",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "tennis",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa16'], obj['lpam_lpa16'], obj['lpat_lpa16'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa16",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa16",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa16",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "weights",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa17'], obj['lpam_lpa17'], obj['lpat_lpa17'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa17",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa17",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa17",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "fishing",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa18'], obj['lpam_lpa18'], obj['lpat_lpa18'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa18",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa18",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa18",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "volleyball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa19'], obj['lpam_lpa19'], obj['lpat_lpa19'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa19",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa19",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa19",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "basketball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa20'], obj['lpam_lpa20'], obj['lpat_lpa20'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa20",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa20",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa20",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "soccer",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa21'], obj['lpam_lpa21'], obj['lpat_lpa21'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa21",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa21",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa21",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "other",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa22'], obj['lpam_lpa22'], obj['lpat_lpa22'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa22",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa22",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa22",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivity",
                        "equation": "derived = userFunctions['PhysicalActivity.fun'](obj['lpa_lpa0'], obj['walk'], obj['garden'], obj['swim'], obj['bike'], obj['dance'], obj['hexercises'], obj['hockey'], obj['skate'], obj['inline'], obj['jogrun'], obj['golf'], obj['aerobics'], obj['ski'], obj['bowl'], obj['baseball'], obj['tennis'], obj['weights'], obj['fishing'], obj['volleyball'], obj['basketball'], obj['soccer'], obj['other'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa0",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "walk",
                            "garden",
                            "swim",
                            "bike",
                            "dance",
                            "hexercises",
                            "hockey",
                            "skate",
                            "inline",
                            "jogrun",
                            "golf",
                            "aerobics",
                            "ski",
                            "bowl",
                            "baseball",
                            "tennis",
                            "weights",
                            "fishing",
                            "volleyball",
                            "basketball",
                            "soccer",
                            "other"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "metadata": { "label": "Activity", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivityLog_cont",
                        "equation": "derived = userFunctions['PhysicalActivityLog_cont.fun'](obj['PhysicalActivity'], userFunctions, func);",
                        "derivedFrom": ["PhysicalActivity"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DepInd",
                        "equation": "derived = userFunctions['DepInd.fun'](obj['dep'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "dep",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "0",
                                "displayValue": "Low level of neighbourhood deprivation",
                                "description": "1st or 2nd quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "1",
                                "displayValue": "Moderate level of neighbourhood deprivation",
                                "description": "3rd quinitle of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "2",
                                "displayValue": "High level of neighbourhood deprivation",
                                "description": "4th or 5th quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            }
                        ],
                        "metadata": {
                            "label": "Deprivation Level",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "DepIndHigh_cat",
                        "equation": "derived = userFunctions['DepIndHigh_cat.fun'](obj['DepInd'], userFunctions, func);",
                        "derivedFrom": ["DepInd"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High neighbourhood deprivation",
                                "description": "4th or 5th quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "High deprivation",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "DepIndMod_cat",
                        "equation": "derived = userFunctions['DepIndMod_cat.fun'](obj['DepInd'], userFunctions, func);",
                        "derivedFrom": ["DepInd"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate neighbourhood deprivation",
                                "description": "3rd quinitle of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "Average deprivation",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Edu2",
                        "equation": "derived = userFunctions['Edu2.fun'](obj['hs'], obj['ed'], obj['hdg'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "hs",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "ed",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "hdg",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Edu1",
                        "equation": "derived = userFunctions['Edu1.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduHSGrad_cat",
                        "equation": "derived = userFunctions['EduHSGrad_cat.fun'](obj['Edu1'], userFunctions, func);",
                        "derivedFrom": ["Edu1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High school graduate",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "High school", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduNoGrad_cat",
                        "equation": "derived = userFunctions['EduNoGrad_cat.fun'](obj['Edu1'], userFunctions, func);",
                        "derivedFrom": ["Edu1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Less than high school graduation",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "<High school",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "ImYrAgo",
                        "equation": "derived = userFunctions['ImYrAgo.fun'](obj['imm'], obj['imyr'], obj['CurrentYear'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "imm",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "imyr",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "CurrentYear",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig2",
                        "equation": "derived = userFunctions['Immig2.fun'](obj['imm'], obj['ImYrAgo'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "imm",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "ImYrAgo"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig1",
                        "equation": "derived = userFunctions['Immig1.fun'](obj['Immig2'], userFunctions, func);",
                        "derivedFrom": ["Immig2"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig0to15_cat",
                        "equation": "derived = userFunctions['Immig0to15_cat.fun'](obj['Immig1'], userFunctions, func);",
                        "derivedFrom": ["Immig1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated <15 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Immigrate <15y",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig16to30_cat",
                        "equation": "derived = userFunctions['Immig16to30_cat.fun'](obj['Immig1'], userFunctions, func);",
                        "derivedFrom": ["Immig1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 16 to 30 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Immigrate 15-30y",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig31to45_cat",
                        "equation": "derived = userFunctions['Immig31to45_cat.fun'](obj['Immig1'], userFunctions, func);",
                        "derivedFrom": ["Immig1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 31 to 45 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Immigrate 31-45y",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMI_cont",
                        "equation": "derived = userFunctions['BMI_cont.fun'](obj['weightlb'], obj['heightin_hft'], obj['heightin_hin'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "weightlb",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "heightin_hft",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "heightin_hin",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMI_spline",
                        "equation": "derived = userFunctions['BMI_spline.fun'](obj['BMI_cont'], userFunctions, func);",
                        "derivedFrom": ["BMI_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "BMI Spline", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "HeartDis_cat",
                        "equation": "derived = userFunctions['HeartDis_cat.fun'](obj['hd'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "hd",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has heart disease",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have heart disease",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Heart disease",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Stroke_cat",
                        "equation": "derived = userFunctions['Stroke_cat.fun'](obj['stk'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "stk",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Suffers from effects of a previous stroke",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not suffer from the effects of a previous stroke",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "Stroke", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Cancer_cat",
                        "equation": "derived = userFunctions['Cancer_cat.fun'](obj['can'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "can",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has cancer",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have cancer",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "Cancer", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeXCancer_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['Cancer_cat'], obj['Age_cont'], userFunctions, func);",
                        "derivedFrom": ["Cancer_cat", "Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Diabetes_cat",
                        "equation": "derived = userFunctions['Diabetes_cat.fun'](obj['diab'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "diab",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has diabetes",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have diabetes",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "Diabetes", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeXDiabetes_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['Diabetes_cat'], obj['Age_cont'], userFunctions, func);",
                        "derivedFrom": ["Diabetes_cat", "Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    }
                ],
                "userFunctions": {
                    "Interact.fun": "\n        userFunctions[\"Interact.fun\"] = (function (var1, var2, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](var1)) && func['not'](func['is.na'](var2)), var1 * var2, undefined);\n})\n    ",
                    "Max.fun": "\n        userFunctions[\"Max.fun\"] = (function (var1, max, userFunctions, func) {\n    return func['ifelse2'](var1 > max, max, var1);\n})\n    ",
                    "NA0.fun": "\n        userFunctions[\"NA0.fun\"] = (function (var1, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](var1), 0, var1);\n})\n    ",
                    "falseifNA": "\n        userFunctions[\"falseifNA\"] = (function (x, userFunctions, func) {\n    return func['ifelse'](func['is.na'](x), false, x);\n})\n    ",
                    "Age_spline.fun(Age_spline)": "\n        userFunctions[\"Age_spline.fun(Age_spline)\"] = (function (Age_cont, point, userFunctions, func) {\n    return func['ifelse2'](Age_cont <= point, 0, func['ifelse2'](Age_cont > point, Age_cont - point, undefined));\n})\n    ",
                    "Age_spline.fun": "\n        userFunctions[\"Age_spline.fun\"] = (function (Age_cont, point, userFunctions, func) {\n    return userFunctions['Age_spline.fun(Age_spline)'](Age_cont, point, userFunctions, func);\n})\n    ",
                    "DrinksLastWeek.fun": "\n        userFunctions[\"DrinksLastWeek.fun\"] = (function (drk_drkm2, drk_drkt2, drk_drkw2, drk_drkr2, drk_drkf2, drk_drksa2, drk_drksu2, dany, userFunctions, func) {\n    return func['ifelse2'](dany == 'dany2', 0, func['ifelse2'](dany == 'dany1', drk_drkm2 + drk_drkt2 + drk_drkw2 + drk_drkr2 + drk_drkf2 + drk_drksa2 + drk_drksu2, undefined));\n})\n    ",
                    "Binge.fun": "\n        userFunctions[\"Binge.fun\"] = (function (db, dany, drk_drkm2, drk_drkt2, drk_drkw2, drk_drkr2, drk_drkf2, drk_drksa2, drk_drksu2, userFunctions, func) {\n    return func['ifelse2'](func['isIn'](db, 'db5', 'db6') || drk_drkm2 >= 5 || drk_drkt2 >= 5 || drk_drkw2 >= 5 || drk_drkr2 >= 5 || drk_drkf2 >= 5 || drk_drksa2 >= 5 || drk_drksu2 >= 5, 1, func['ifelse2'](func['isIn'](db, 'db1', 'db2', 'db3', 'db4') && dany == 'dany2' || func['isIn'](db, 'db1', 'db2', 'db3', 'db4') && dany == 'dany1' && (drk_drkm2 < 5 && drk_drkt2 < 5 && drk_drkw2 < 5 && drk_drkr2 < 5 && drk_drkf2 < 5 && drk_drksa2 < 5 && drk_drksu2 < 5), 0, undefined));\n})\n    ",
                    "AlcoholType.fun": "\n        userFunctions[\"AlcoholType.fun\"] = (function (Binge, dany, DrinksLastWeek_cont, cut1, cut2, userFunctions, func) {\n    return func['ifelse2'](Binge == 1, 2, func['ifelse2'](dany == 'dany2' || dany == 'dany1' && DrinksLastWeek_cont <= cut1, 0, func['ifelse2'](dany == 'dany1' && DrinksLastWeek_cont > cut1 && DrinksLastWeek_cont <= cut2, 1, func['ifelse2'](dany == 'dany1' && DrinksLastWeek_cont > cut2, 2, undefined))));\n})\n    ",
                    "AlcoholMod_cat.fun": "\n        userFunctions[\"AlcoholMod_cat.fun\"] = (function (AlcoholType, userFunctions, func) {\n    return func['ifelse'](AlcoholType == 1, 1, func['ifelse'](func['isIn'](AlcoholType, 0, 2), 0, undefined));\n})\n    ",
                    "AlcoholHeavy_cat.fun": "\n        userFunctions[\"AlcoholHeavy_cat.fun\"] = (function (AlcoholType, userFunctions, func) {\n    return func['ifelse'](AlcoholType == 2, 1, func['ifelse'](func['isIn'](AlcoholType, 0, 1), 0, undefined));\n})\n    ",
                    "QuitTime.fun": "\n        userFunctions[\"QuitTime.fun\"] = (function (stpn, stpny, userFunctions, func) {\n    return func['ifelse2'](stpn == 'stpn1', 0, func['ifelse2'](stpn == 'stpn2', 1, func['ifelse2'](stpn == 'stpn3', 2, func['ifelse2'](stpn == 'stpn4', stpny, undefined))));\n})\n    ",
                    "TypeOfSmoker.fun": "\n        userFunctions[\"TypeOfSmoker.fun\"] = (function (smk, evd, s100, cigdayf, cigdayd, userFunctions, func) {\n    return func['ifelse2'](smk == 'smk3' && evd == 'evd2' && s100 == 's1002', 0, func['ifelse2'](smk == 'smk3' && evd == 'evd1' && cigdayf < 20 || smk == 'smk3' && evd == 'evd2' && s100 == 's1001', 1, func['ifelse2'](smk == 'smk3' && evd == 'evd1' && cigdayf >= 20, 2, func['ifelse2'](smk == 'smk1' && cigdayd < 20 || smk == 'smk2', 3, func['ifelse2'](smk == 'smk1' && cigdayd >= 20, 4, undefined)))));\n})\n    ",
                    "QSLightCont_df1.fun": "\n        userFunctions[\"QSLightCont_df1.fun\"] = (function (TypeOfSmoker, QuitTime, sigma, userFunctions, func) {\n    return func['ifelse2'](func['isIn'](TypeOfSmoker, 0, 2, 4), 0, func['ifelse2'](TypeOfSmoker == 1, func['exp'](-QuitTime / sigma), func['ifelse2'](TypeOfSmoker == 3, 1, undefined)));\n})\n    ",
                    "QSLightCont_df2.fun": "\n        userFunctions[\"QSLightCont_df2.fun\"] = (function (SmokeDaily, DailyCig, Age_cont, AgeDailyQuit, sigma, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1 && DailyCig < 20, 1, func['ifelse2'](SmokeDaily == 2 && DailyCig < 20, func['exp'](-(Age_cont - AgeDailyQuit) / sigma), func['ifelse2'](func['isIn'](SmokeDaily, 1, 2) && DailyCig >= 20, 0, undefined))));\n})\n    ",
                    "QSHeavyCont_df1.fun": "\n        userFunctions[\"QSHeavyCont_df1.fun\"] = (function (TypeOfSmoker, QuitTime, sigma, userFunctions, func) {\n    return func['ifelse2'](func['isIn'](TypeOfSmoker, 0, 1, 3), 0, func['ifelse2'](TypeOfSmoker == 2, func['exp'](-QuitTime / sigma), func['ifelse2'](TypeOfSmoker == 4, 1, undefined)));\n})\n    ",
                    "QSHeavyCont_df2.fun": "\n        userFunctions[\"QSHeavyCont_df2.fun\"] = (function (SmokeDaily, DailyCig, Age_cont, AgeDailyQuit, sigma, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1 && DailyCig >= 20, 1, func['ifelse2'](SmokeDaily == 2 && DailyCig >= 20, func['exp'](-(Age_cont - AgeDailyQuit) / sigma), func['ifelse2'](func['isIn'](SmokeDaily, 1, 2) && DailyCig < 20, 0, undefined))));\n})\n    ",
                    "smoker.fun(smoker)": "\n        userFunctions[\"smoker.fun(smoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3), 1, func['ifelse'](func['isIn'](TypeOfSmoker2, 4, 5, 6), 0, undefined));\n})\n    ",
                    "eversmoker.fun(eversmoker)": "\n        userFunctions[\"eversmoker.fun(eversmoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3, 4, 5), 1, func['ifelse'](TypeOfSmoker2 == 6, 0, undefined));\n})\n    ",
                    "SmokeSimple1.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple1.fun(SmokeSimple)\"] = (function (smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse2'](smoker == 0 && eversmoker == 0, 0, func['ifelse2'](smoker == 1 && eversmoker == 1, 1, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds < 5 || TypeOfSmoker2 == 5, 2, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds >= 5, 3, undefined))));\n})\n    ",
                    "SmokeSimple2.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple2.fun(SmokeSimple)\"] = (function (SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1, 1, func['ifelse2'](SmokeDaily == 2 && Age_cont < AgeDailyQuit + 5, 2, func['ifelse2'](SmokeDaily == 2 && Age_cont > AgeDailyQuit + 5, 3, undefined))));\n})\n    ",
                    "dfruit.fun": "\n        userFunctions[\"dfruit.fun\"] = (function (frt, frtu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](frt), undefined, func['ifelse'](frtu == 'frtd', frt, func['ifelse'](frtu == 'frtw', frt / 7, func['ifelse'](frtu == 'frtm', frt / 30, func['ifelse'](frtu == 'frty', frt / 365, undefined)))));\n})\n    ",
                    "dsalad.fun": "\n        userFunctions[\"dsalad.fun\"] = (function (sal, salu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](sal), undefined, func['ifelse'](salu == 'sald', sal, func['ifelse'](salu == 'salw', sal / 7, func['ifelse'](salu == 'salm', sal / 30, func['ifelse'](salu == 'saly', sal / 365, undefined)))));\n})\n    ",
                    "dpotato.fun": "\n        userFunctions[\"dpotato.fun\"] = (function (pot, potu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](pot), undefined, func['ifelse'](potu == 'potd', pot, func['ifelse'](potu == 'potw', pot / 7, func['ifelse'](potu == 'potm', pot / 30, func['ifelse'](potu == 'poty', pot / 365, undefined)))));\n})\n    ",
                    "dcarrot.fun": "\n        userFunctions[\"dcarrot.fun\"] = (function (car, caru, userFunctions, func) {\n    return func['ifelse'](func['is.na'](car), undefined, func['ifelse'](caru == 'card', car, func['ifelse'](caru == 'carw', car / 7, func['ifelse'](caru == 'carm', car / 30, func['ifelse'](caru == 'cary', car / 365, undefined)))));\n})\n    ",
                    "dveg.fun": "\n        userFunctions[\"dveg.fun\"] = (function (veg, vegu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](veg), undefined, func['ifelse'](vegu == 'vegd', veg, func['ifelse'](vegu == 'vegw', veg / 7, func['ifelse'](vegu == 'vegm', veg / 30, func['ifelse'](vegu == 'vegy', veg / 365, undefined)))));\n})\n    ",
                    "djuice.fun": "\n        userFunctions[\"djuice.fun\"] = (function (jui, juiu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](jui), undefined, func['ifelse'](juiu == 'juid', jui, func['ifelse'](juiu == 'juiw', jui / 7, func['ifelse'](juiu == 'juim', jui / 30, func['ifelse'](juiu == 'juiy', jui / 365, undefined)))));\n})\n    ",
                    "FruitVeg.fun": "\n        userFunctions[\"FruitVeg.fun\"] = (function (dfruit, dsalad, dpotato, dcarrot, dveg, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](dfruit)) && func['not'](func['is.na'](dsalad)) && func['not'](func['is.na'](dpotato)) && func['not'](func['is.na'](dcarrot)) && func['not'](func['is.na'](dveg)), dfruit + dsalad + dpotato + dcarrot + dveg, undefined);\n})\n    ",
                    "FruitVeg8Max.fun": "\n        userFunctions[\"FruitVeg8Max.fun\"] = (function (FruitVeg, userFunctions, func) {\n    return func['ifelse2'](FruitVeg > 8, 8, func['ifelse2'](func['not'](func['is.na'](FruitVeg)), FruitVeg, undefined));\n})\n    ",
                    "HighPotatoFlag.fun": "\n        userFunctions[\"HighPotatoFlag.fun\"] = (function (dpotato, userFunctions, func) {\n    return func['ifelse2'](dpotato >= 1, 1, func['ifelse2'](func['not'](func['is.na'](dpotato)), 0, undefined));\n})\n    ",
                    "NoCarrotFlag.fun": "\n        userFunctions[\"NoCarrotFlag.fun\"] = (function (dcarrot, userFunctions, func) {\n    return func['ifelse2'](dcarrot == 0, 1, func['ifelse2'](func['not'](func['is.na'](dcarrot)), 0, undefined));\n})\n    ",
                    "HighJuice.fun": "\n        userFunctions[\"HighJuice.fun\"] = (function (djuice, userFunctions, func) {\n    return func['ifelse2'](djuice <= 0, 0, func['ifelse2'](djuice == 1, 0, func['ifelse2'](func['not'](func['is.na'](djuice)), djuice - 1, undefined)));\n})\n    ",
                    "DietScore.fun": "\n        userFunctions[\"DietScore.fun\"] = (function (FruitVeg8Max, HighPotatoFlag, NoCarrotFlag, HighJuice, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](FruitVeg8Max)) && func['not'](func['is.na'](HighPotatoFlag)) && func['not'](func['is.na'](NoCarrotFlag)) && func['not'](func['is.na'](HighJuice)), 2 + FruitVeg8Max - 2 * HighPotatoFlag - 2 * NoCarrotFlag - 2 * HighJuice, undefined);\n})\n    ",
                    "DietScore_cont.fun": "\n        userFunctions[\"DietScore_cont.fun\"] = (function (DietScore, userFunctions, func) {\n    return func['ifelse2'](DietScore < 0, 0, func['ifelse2'](DietScore > 10, 10, func['ifelse2'](func['not'](func['is.na'](DietScore)), DietScore, undefined)));\n})\n    ",
                    "Activity.fun": "\n        userFunctions[\"Activity.fun\"] = (function (lpa, lpam, lpat, userFunctions, func) {\n    return func['ifelse2'](lpa == 'Yes' && lpam == 'lpa15', lpat * 0.2167 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa30', lpat * 0.3833 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa60', lpat * 0.75 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa61', lpat * 1 / 3, 0))));\n})\n    ",
                    "PhysicalActivity.fun(noactivity)": "\n        userFunctions[\"PhysicalActivity.fun(noactivity)\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return func['ifelse2'](lpa_lpa0 == 'Yes' && walk == 0 && garden == 0 && swim == 0 && bike == 0 && dance == 0 && hexercises == 0 && hockey == 0 && skate == 0 && inline == 0 && jogrun == 0 && golf == 0 && aerobics == 0 && ski == 0 && bowl == 0 && baseball == 0 && tennis == 0 && weights == 0 && fishing == 0 && volleyball == 0 && basketball == 0 && soccer == 0 && other == 0, 1, func['ifelse2'](func['is.na'](lpa_lpa0) && walk == 0 && garden == 0 && swim == 0 && bike == 0 && dance == 0 && hexercises == 0 && hockey == 0 && skate == 0 && inline == 0 && jogrun == 0 && golf == 0 && aerobics == 0 && ski == 0 && bowl == 0 && baseball == 0 && tennis == 0 && weights == 0 && fishing == 0 && volleyball == 0 && basketball == 0 && soccer == 0 && other == 0, undefined, 0));\n})\n    ",
                    "PhysicalActivity.fun(PhysicalActivity)": "\n        userFunctions[\"PhysicalActivity.fun(PhysicalActivity)\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](userFunctions['PhysicalActivity.fun(noactivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func)), undefined, func['ifelse2'](userFunctions['PhysicalActivity.fun(noactivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) == 1, 0, func['ifelse2'](3 * walk / 30 + 3 * garden / 30 + 3 * swim / 30 + 4 * bike / 30 + 3 * dance / 30 + 3 * hexercises / 30 + 6 * hockey / 30 + 4 * skate / 30 + 5 * inline / 30 + 9.5 * jogrun / 30 + 4 * golf / 30 + 4 * aerobics / 30 + 4 * ski / 30 + 2 * bowl / 30 + 3 * baseball / 30 + 4 * tennis / 30 + 3 * weights / 30 + 3 * fishing / 30 + 5 * volleyball / 30 + 6 * basketball / 30 + 5 * soccer / 30 + 4 * other / 30 > 10, 10, 3 * walk / 30 + 3 * garden / 30 + 3 * swim / 30 + 4 * bike / 30 + 3 * dance / 30 + 3 * hexercises / 30 + 6 * hockey / 30 + 4 * skate / 30 + 5 * inline / 30 + 9.5 * jogrun / 30 + 4 * golf / 30 + 4 * aerobics / 30 + 4 * ski / 30 + 2 * bowl / 30 + 3 * baseball / 30 + 4 * tennis / 30 + 3 * weights / 30 + 3 * fishing / 30 + 5 * volleyball / 30 + 6 * basketball / 30 + 5 * soccer / 30 + 4 * other / 30)));\n})\n    ",
                    "PhysicalActivity.fun": "\n        userFunctions[\"PhysicalActivity.fun\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return userFunctions['PhysicalActivity.fun(PhysicalActivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func);\n})\n    ",
                    "PhysicalActivityLog_cont.fun(PhysicalActivity_cont)": "\n        userFunctions[\"PhysicalActivityLog_cont.fun(PhysicalActivity_cont)\"] = (function (PhysicalActivity, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](PhysicalActivity)), func['log'](1 + PhysicalActivity) / func['log'](10), undefined);\n})\n    ",
                    "PhysicalActivityLog_cont.fun": "\n        userFunctions[\"PhysicalActivityLog_cont.fun\"] = (function (PhysicalActivity, userFunctions, func) {\n    return userFunctions['PhysicalActivityLog_cont.fun(PhysicalActivity_cont)'](PhysicalActivity, userFunctions, func);\n})\n    ",
                    "DepInd.fun": "\n        userFunctions[\"DepInd.fun\"] = (function (dep, userFunctions, func) {\n    return func['ifelse'](dep == 'dep1', 0, func['ifelse'](dep == 'dep2', 1, func['ifelse'](dep == 'dep3', 2, undefined)));\n})\n    ",
                    "DepIndHigh_cat.fun": "\n        userFunctions[\"DepIndHigh_cat.fun\"] = (function (DepInd, userFunctions, func) {\n    return func['ifelse'](DepInd == 2, 1, func['ifelse'](func['isIn'](DepInd, 0, 1), 0, undefined));\n})\n    ",
                    "DepIndMod_cat.fun": "\n        userFunctions[\"DepIndMod_cat.fun\"] = (function (DepInd, userFunctions, func) {\n    return func['ifelse'](DepInd == 1, 1, func['ifelse'](func['isIn'](DepInd, 0, 2), 0, undefined));\n})\n    ",
                    "Edu2.fun": "\n        userFunctions[\"Edu2.fun\"] = (function (hs, ed, hdg, userFunctions, func) {\n    return func['ifelse2'](hs == 'hs2', 0, func['ifelse2'](hs == 'hs1' && ed == 'ed2', 1, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && hdg == 'hdg1', 2, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && func['isIn'](hdg, 'hdg2', 'hdg3', 'hdg4', 'hdg5', 'hdg6'), 3, undefined))));\n})\n    ",
                    "Edu1.fun": "\n        userFunctions[\"Edu1.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 0, 2, func['ifelse'](Edu2 == 1, 1, func['ifelse'](func['isIn'](Edu2, 2, 3), 0, undefined)));\n})\n    ",
                    "EduHSGrad_cat.fun": "\n        userFunctions[\"EduHSGrad_cat.fun\"] = (function (Edu1, userFunctions, func) {\n    return func['ifelse'](Edu1 == 1, 1, func['ifelse'](func['isIn'](Edu1, 0, 2), 0, undefined));\n})\n    ",
                    "EduNoGrad_cat.fun": "\n        userFunctions[\"EduNoGrad_cat.fun\"] = (function (Edu1, userFunctions, func) {\n    return func['ifelse'](Edu1 == 2, 1, func['ifelse'](func['isIn'](Edu1, 0, 1), 0, undefined));\n})\n    ",
                    "ImYrAgo.fun(ImYrAgo)": "\n        userFunctions[\"ImYrAgo.fun(ImYrAgo)\"] = (function (imm, imyr, CurrentYear, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](imm) || imm == 'imm2' && func['is.na'](imyr) || imm == 'imm1', undefined, CurrentYear - imyr);\n})\n    ",
                    "ImYrAgo.fun": "\n        userFunctions[\"ImYrAgo.fun\"] = (function (imm, imyr, CurrentYear, userFunctions, func) {\n    return userFunctions['ImYrAgo.fun(ImYrAgo)'](imm, imyr, CurrentYear, userFunctions, func);\n})\n    ",
                    "Immig2.fun(Immig2)": "\n        userFunctions[\"Immig2.fun(Immig2)\"] = (function (imm, ImYrAgo, userFunctions, func) {\n    return func['ifelse2'](imm == 'imm1', 0, func['ifelse2'](imm == 'imm2' && ImYrAgo >= 0 && ImYrAgo <= 15, 1, func['ifelse2'](imm == 'imm2' && ImYrAgo > 15 && ImYrAgo <= 30, 2, func['ifelse2'](imm == 'imm2' && ImYrAgo > 30 && ImYrAgo <= 45, 3, func['ifelse2'](imm == 'imm2' && ImYrAgo > 45, 4, undefined)))));\n})\n    ",
                    "Immig2.fun": "\n        userFunctions[\"Immig2.fun\"] = (function (imm, ImYrAgo, userFunctions, func) {\n    return userFunctions['Immig2.fun(Immig2)'](imm, ImYrAgo, userFunctions, func);\n})\n    ",
                    "Immig1.fun(Immig1)": "\n        userFunctions[\"Immig1.fun(Immig1)\"] = (function (Immig2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](Immig2, 0, 4), 0, func['ifelse'](Immig2 == 1, 1, func['ifelse'](Immig2 == 2, 2, func['ifelse'](Immig2 == 3, 3, undefined))));\n})\n    ",
                    "Immig1.fun": "\n        userFunctions[\"Immig1.fun\"] = (function (Immig2, userFunctions, func) {\n    return userFunctions['Immig1.fun(Immig1)'](Immig2, userFunctions, func);\n})\n    ",
                    "Immig0to15_cat.fun(Immig0to15_cat)": "\n        userFunctions[\"Immig0to15_cat.fun(Immig0to15_cat)\"] = (function (Immig1, userFunctions, func) {\n    return func['ifelse'](Immig1 == 1, 1, func['ifelse'](func['isIn'](Immig1, 0, 2, 3), 0, undefined));\n})\n    ",
                    "Immig0to15_cat.fun": "\n        userFunctions[\"Immig0to15_cat.fun\"] = (function (Immig1, userFunctions, func) {\n    return userFunctions['Immig0to15_cat.fun(Immig0to15_cat)'](Immig1, userFunctions, func);\n})\n    ",
                    "Immig16to30_cat.fun(Immig16to30_cat)": "\n        userFunctions[\"Immig16to30_cat.fun(Immig16to30_cat)\"] = (function (Immig1, userFunctions, func) {\n    return func['ifelse'](Immig1 == 2, 1, func['ifelse'](func['isIn'](Immig1, 0, 1, 3), 0, undefined));\n})\n    ",
                    "Immig16to30_cat.fun": "\n        userFunctions[\"Immig16to30_cat.fun\"] = (function (Immig1, userFunctions, func) {\n    return userFunctions['Immig16to30_cat.fun(Immig16to30_cat)'](Immig1, userFunctions, func);\n})\n    ",
                    "Immig31to45_cat.fun(Immig31to45_cat)": "\n        userFunctions[\"Immig31to45_cat.fun(Immig31to45_cat)\"] = (function (Immig1, userFunctions, func) {\n    return func['ifelse'](Immig1 == 3, 1, func['ifelse'](func['isIn'](Immig1, 0, 1, 2), 0, undefined));\n})\n    ",
                    "Immig31to45_cat.fun": "\n        userFunctions[\"Immig31to45_cat.fun\"] = (function (Immig1, userFunctions, func) {\n    return userFunctions['Immig31to45_cat.fun(Immig31to45_cat)'](Immig1, userFunctions, func);\n})\n    ",
                    "BMI_cont.fun(weightkg)": "\n        userFunctions[\"BMI_cont.fun(weightkg)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](weightlb)), weightlb / 2.2046226218, undefined);\n})\n    ",
                    "BMI_cont.fun(heightm)": "\n        userFunctions[\"BMI_cont.fun(heightm)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](heightin_hft)) && func['not'](func['is.na'](heightin_hin)), (heightin_hft * 12 + heightin_hin) / 39.3701, undefined);\n})\n    ",
                    "BMI_cont.fun": "\n        userFunctions[\"BMI_cont.fun\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))) && func['not'](func['is.na'](userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))), userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) / (userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) * userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func)), undefined);\n})\n    ",
                    "BMI_spline.fun": "\n        userFunctions[\"BMI_spline.fun\"] = (function (BMI_cont, userFunctions, func) {\n    return func['ifelse2'](BMI_cont - 35 > 0, BMI_cont - 35, func['ifelse2'](BMI_cont - 35 <= 0, 0, undefined));\n})\n    ",
                    "HeartDis_cat.fun": "\n        userFunctions[\"HeartDis_cat.fun\"] = (function (hd, userFunctions, func) {\n    return func['ifelse'](hd == 'hd1', 1, func['ifelse'](hd == 'hd2', 0, undefined));\n})\n    ",
                    "Stroke_cat.fun": "\n        userFunctions[\"Stroke_cat.fun\"] = (function (stk, userFunctions, func) {\n    return func['ifelse'](stk == 'stk1', 1, func['ifelse'](stk == 'stk2', 0, undefined));\n})\n    ",
                    "Cancer_cat.fun": "\n        userFunctions[\"Cancer_cat.fun\"] = (function (can, userFunctions, func) {\n    return func['ifelse'](can == 'can1', 1, func['ifelse'](can == 'can2', 0, undefined));\n})\n    ",
                    "Diabetes_cat.fun": "\n        userFunctions[\"Diabetes_cat.fun\"] = (function (diab, userFunctions, func) {\n    return func['ifelse'](diab == 'diab1', 1, func['ifelse'](diab == 'diab2', 0, undefined));\n})\n    "
                },
                "tables": {},
                "baseline": 0.0001864515,
                "covariates": [
                    {
                        "name": "Age_cont",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.083136809,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE"]
                    },
                    {
                        "name": "Age_spline",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.032863951,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE"]
                    },
                    {
                        "name": "QSLightCont_df",
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "isRequired": false,
                        "metadata": {
                            "label": "Light smoker",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.90030781,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["SMOKING"]
                    },
                    {
                        "name": "QSHeavyCont_df",
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "isRequired": false,
                        "metadata": {
                            "label": "Heavy smoker",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 1.039483131,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["SMOKING"]
                    },
                    {
                        "name": "PhysicalActivityLog_cont",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.703145563,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["ACTIVITY"]
                    },
                    {
                        "name": "DietScore_cont",
                        "intervals":[ {
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "isRequired": false,
                        "metadata": { "label": "Diet", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.034410652,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DIET"]
                    },
                    {
                        "name": "AlcoholHeavy_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Heavy drinker",
                                "description": "Males: >21 drinks/week; Females: >14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Heavy alcohol",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.05087037,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["ALCOHOL"]
                    },
                    {
                        "name": "AlcoholMod_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate drinker",
                                "description": "Males: 4-21 drinks/week; Females: 3 to 14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Mod. alcohol",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.192706462,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["ALCOHOL"]
                    },
                    {
                        "name": "DepIndMod_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate neighbourhood deprivation",
                                "description": "3rd quinitle of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Average deprivation",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.06906141,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DEPRIVATION"]
                    },
                    {
                        "name": "DepIndHigh_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High neighbourhood deprivation",
                                "description": "4th or 5th quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "High deprivation",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.220101732,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DEPRIVATION"]
                    },
                    {
                        "name": "EduNoGrad_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Less than high school graduation",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "<High school",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.185703949,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["EDUCATION"]
                    },
                    {
                        "name": "EduHSGrad_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High school graduate",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "High school",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.086322687,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["EDUCATION"]
                    },
                    {
                        "name": "Immig0to15_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated <15 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Immigrate <15y",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.982657657,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["IMMIGRATION"]
                    },
                    {
                        "name": "Immig16to30_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 16 to 30 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Immigrate 15-30y",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.404318147,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["IMMIGRATION"]
                    },
                    {
                        "name": "Immig31to45_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 31 to 45 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Immigrate 31-45y",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.117087334,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["IMMIGRATION"]
                    },
                    {
                        "name": "HeartDis_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has heart disease",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have heart disease",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Heart disease",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.379459368,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    },
                    {
                        "name": "Stroke_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Suffers from effects of a previous stroke",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not suffer from the effects of a previous stroke",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": { "label": "Stroke", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.224159491,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    },
                    {
                        "name": "Cancer_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has cancer",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have cancer",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": { "label": "Cancer", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 4.408961435,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    },
                    {
                        "name": "Diabetes_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has diabetes",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have diabetes",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": { "label": "Diabetes", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 1.984995405,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    },
                    {
                        "name": "BMI_spline",
                        
                        "isRequired": false,
                        "metadata": { "label": "BMI Spline", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.030376821,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["BMI"]
                    },
                    {
                        "name": "AgeXCancer_int",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.049785079,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE"]
                    },
                    {
                        "name": "AgeXDiabetes_int",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.020973253,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE"]
                    }
                ],
                "timeMetric": "years",
                "maximumTime": 5,
                "algorithmType": 1 
            },
            "predicate": {
                "equation": "predicateResult = obj['sex'] === 'male'",
                "variables": ["sex"]
            }
        },
        {
            "algorithm": {
                "name": "MPoRT female model",
                "derivedFields": [
                    {
                        "fieldType": 1,
                        "name": "Age_cont",
                        "equation": "derived = obj['age'];",
                        "derivedFrom": [
                            {
                                "name": "age",
                                "intervals":[ {
                                    "lowerMargin": {
                                        "margin": 20,
                                        "isOpen": false
                                    },
                                    "higherMargin": {
                                        "margin": 79,
                                        "isOpen": false
                                    }
                                }],
                                "isRequired": false,
                                "metadata": {
                                    "label": "Age",
                                    "shortLabel": ""
                                },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Age_spline",
                        "equation": "derived = userFunctions['Age_spline.fun'](obj['Age_cont'], 80, userFunctions, func);",
                        "derivedFrom": ["Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkm2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkm'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkm",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkt2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkt'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkt",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkw2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkw'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkw",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkr2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkr'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkr",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drkf2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drkf'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drkf",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksa2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksa'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksa",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "drk_drksu2",
                        "equation": "derived = userFunctions['NA0.fun'](obj['drk_drksu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "drk_drksu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek",
                        "equation": "derived = userFunctions['DrinksLastWeek.fun'](obj['drk_drkm2'], obj['drk_drkt2'], obj['drk_drkw2'], obj['drk_drkr2'], obj['drk_drkf2'], obj['drk_drksa2'], obj['drk_drksu2'], obj['dany'], userFunctions, func);",
                        "derivedFrom": [
                            "drk_drkm2",
                            "drk_drkt2",
                            "drk_drkw2",
                            "drk_drkr2",
                            "drk_drkf2",
                            "drk_drksa2",
                            "drk_drksu2",
                            {
                                "name": "dany",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DrinksLastWeek_cont",
                        "equation": "derived = userFunctions['Max.fun'](obj['DrinksLastWeek'], 26, userFunctions, func);",
                        "derivedFrom": ["DrinksLastWeek"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Binge",
                        "equation": "derived = userFunctions['Binge.fun'](obj['db'], obj['dany'], obj['drk_drkm2'], obj['drk_drkt2'], obj['drk_drkw2'], obj['drk_drkr2'], obj['drk_drkf2'], obj['drk_drksa2'], obj['drk_drksu2'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "db",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "dany",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "drk_drkm2",
                            "drk_drkt2",
                            "drk_drkw2",
                            "drk_drkr2",
                            "drk_drkf2",
                            "drk_drksa2",
                            "drk_drksu2"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AlcoholType",
                        "equation": "derived = userFunctions['AlcoholType.fun'](obj['Binge'], obj['dany'], obj['DrinksLastWeek_cont'], 2, 14, userFunctions, func);",
                        "derivedFrom": [
                            "Binge",
                            {
                                "name": "dany",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "DrinksLastWeek_cont"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "0",
                                "displayValue": "Non/light drinker",
                                "description": "Males: <4 drinks/week; Females: <3 drinks/week"
                            },
                            {
                                "value": "1",
                                "displayValue": "Moderate drinker",
                                "description": "Males: 4-21 drinks/week; Females: 3 to 14 drinks/week"
                            },
                            {
                                "value": "2",
                                "displayValue": "Heavy drinker",
                                "description": "Males: >21 drinks/week; Females: >14 drinks/week"
                            }
                        ],
                        "metadata": {
                            "label": "Alcohol Status",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "AlcoholMod_cat",
                        "equation": "derived = userFunctions['AlcoholMod_cat.fun'](obj['AlcoholType'], userFunctions, func);",
                        "derivedFrom": ["AlcoholType"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate drinker",
                                "description": "Males: 4-21 drinks/week; Females: 3 to 14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "Mod. alcohol",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "AlcoholHeavy_cat",
                        "equation": "derived = userFunctions['AlcoholHeavy_cat.fun'](obj['AlcoholType'], userFunctions, func);",
                        "derivedFrom": ["AlcoholType"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Heavy drinker",
                                "description": "Males: >21 drinks/week; Females: >14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "Heavy alcohol",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "QuitTime",
                        "equation": "derived = userFunctions['QuitTime.fun'](obj['stpn'], obj['stpny'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "stpn",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "stpny",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": {
                            "label": "Smoking Quit Time",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "TypeOfSmoker",
                        "equation": "derived = userFunctions['TypeOfSmoker.fun'](obj['smk'], obj['evd'], obj['s100'], obj['cigdayf'], obj['cigdayd'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "smk",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "evd",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "s100",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayf",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "cigdayd",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "QSLightCont_df",
                        "equation": "derived = func['ifelse'](func['not'](func['is.na'](obj['TypeOfSmoker'])), userFunctions['QSLightCont_df1.fun'](obj['TypeOfSmoker'], obj['QuitTime'], 26, userFunctions, func), func['ifelse'](func['not'](func['is.na'](obj['SmokeDaily'])), userFunctions['QSLightCont_df2.fun'](obj['SmokeDaily'], obj['DailyCig'], obj['Age_cont'], obj['AgeDailyQuit'], 26, userFunctions, func), undefined));",
                        "derivedFrom": [
                            "TypeOfSmoker",
                            "QuitTime",
                            {
                                "name": "SmokeDaily",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "DailyCig",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "Age_cont",
                            {
                                "name": "AgeDailyQuit",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "metadata": {
                            "label": "Light smoker",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "QSHeavyCont_df",
                        "equation": "derived = func['ifelse'](func['not'](func['is.na'](obj['TypeOfSmoker'])), userFunctions['QSHeavyCont_df1.fun'](obj['TypeOfSmoker'], obj['QuitTime'], 26, userFunctions, func), func['ifelse'](func['not'](func['is.na'](obj['SmokeDaily'])), userFunctions['QSHeavyCont_df2.fun'](obj['SmokeDaily'], obj['DailyCig'], obj['Age_cont'], obj['AgeDailyQuit'], 26, userFunctions, func), undefined));",
                        "derivedFrom": [
                            "TypeOfSmoker",
                            "QuitTime",
                            {
                                "name": "SmokeDaily",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "DailyCig",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "Age_cont",
                            {
                                "name": "AgeDailyQuit",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "metadata": {
                            "label": "Heavy smoker",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "dfruit",
                        "equation": "derived = userFunctions['dfruit.fun'](obj['frt'], obj['frtu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "frt",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "frtu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dsalad",
                        "equation": "derived = userFunctions['dsalad.fun'](obj['sal'], obj['salu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "sal",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "salu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dpotato",
                        "equation": "derived = userFunctions['dpotato.fun'](obj['pot'], obj['potu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "pot",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "potu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dcarrot",
                        "equation": "derived = userFunctions['dcarrot.fun'](obj['car'], obj['caru'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "car",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "caru",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dveg",
                        "equation": "derived = userFunctions['dveg.fun'](obj['veg'], obj['vegu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "veg",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "vegu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "djuice",
                        "equation": "derived = userFunctions['djuice.fun'](obj['jui'], obj['juiu'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "jui",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "juiu",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg",
                        "equation": "derived = userFunctions['FruitVeg.fun'](obj['dfruit'], obj['dsalad'], obj['dpotato'], obj['dcarrot'], obj['dveg'], userFunctions, func);",
                        "derivedFrom": [
                            "dfruit",
                            "dsalad",
                            "dpotato",
                            "dcarrot",
                            "dveg"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "FruitVeg8Max",
                        "equation": "derived = userFunctions['FruitVeg8Max.fun'](obj['FruitVeg'], userFunctions, func);",
                        "derivedFrom": ["FruitVeg"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "HighPotatoFlag",
                        "equation": "derived = userFunctions['HighPotatoFlag.fun'](obj['dpotato'], userFunctions, func);",
                        "derivedFrom": ["dpotato"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "NoCarrotFlag",
                        "equation": "derived = userFunctions['NoCarrotFlag.fun'](obj['dcarrot'], userFunctions, func);",
                        "derivedFrom": ["dcarrot"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "HighJuice",
                        "equation": "derived = userFunctions['HighJuice.fun'](obj['djuice'], userFunctions, func);",
                        "derivedFrom": ["djuice"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DietScore",
                        "equation": "derived = userFunctions['DietScore.fun'](obj['FruitVeg8Max'], obj['HighPotatoFlag'], obj['NoCarrotFlag'], obj['HighJuice'], userFunctions, func);",
                        "derivedFrom": [
                            "FruitVeg8Max",
                            "HighPotatoFlag",
                            "NoCarrotFlag",
                            "HighJuice"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "metadata": { "label": "Diet", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DietScore_cont",
                        "equation": "derived = userFunctions['DietScore_cont.fun'](obj['DietScore'], userFunctions, func);",
                        "derivedFrom": ["DietScore"],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "metadata": { "label": "Diet", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "walk",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa1'], obj['lpam_lpa1'], obj['lpat_lpa1'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa1",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa1",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa1",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "garden",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa2'], obj['lpam_lpa2'], obj['lpat_lpa2'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa2",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa2",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa2",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "swim",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa3'], obj['lpam_lpa3'], obj['lpat_lpa3'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa3",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa3",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa3",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "bike",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa4'], obj['lpam_lpa4'], obj['lpat_lpa4'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa4",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa4",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa4",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "dance",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa5'], obj['lpam_lpa5'], obj['lpat_lpa5'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa5",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa5",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa5",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "hexercises",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa6'], obj['lpam_lpa6'], obj['lpat_lpa6'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa6",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa6",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa6",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "hockey",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa7'], obj['lpam_lpa7'], obj['lpat_lpa7'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa7",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa7",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa7",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "skate",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa8'], obj['lpam_lpa8'], obj['lpat_lpa8'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa8",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa8",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa8",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "inline",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa9'], obj['lpam_lpa9'], obj['lpat_lpa9'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa9",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa9",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa9",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "jogrun",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa10'], obj['lpam_lpa10'], obj['lpat_lpa10'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa10",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa10",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa10",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "golf",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa11'], obj['lpam_lpa11'], obj['lpat_lpa11'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa11",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa11",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa11",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "aerobics",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa12'], obj['lpam_lpa12'], obj['lpat_lpa12'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa12",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa12",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa12",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "ski",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa13'], obj['lpam_lpa13'], obj['lpat_lpa13'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa13",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa13",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa13",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "bowl",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa14'], obj['lpam_lpa14'], obj['lpat_lpa14'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa14",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa14",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa14",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "baseball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa15'], obj['lpam_lpa15'], obj['lpat_lpa15'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa15",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa15",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa15",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "tennis",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa16'], obj['lpam_lpa16'], obj['lpat_lpa16'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa16",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa16",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa16",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "weights",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa17'], obj['lpam_lpa17'], obj['lpat_lpa17'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa17",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa17",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa17",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "fishing",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa18'], obj['lpam_lpa18'], obj['lpat_lpa18'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa18",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa18",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa18",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "volleyball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa19'], obj['lpam_lpa19'], obj['lpat_lpa19'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa19",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa19",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa19",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "basketball",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa20'], obj['lpam_lpa20'], obj['lpat_lpa20'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa20",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa20",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa20",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "soccer",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa21'], obj['lpam_lpa21'], obj['lpat_lpa21'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa21",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa21",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa21",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "other",
                        "equation": "derived = userFunctions['Activity.fun'](obj['lpa_lpa22'], obj['lpam_lpa22'], obj['lpat_lpa22'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa22",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpam_lpa22",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "lpat_lpa22",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivity",
                        "equation": "derived = userFunctions['PhysicalActivity.fun'](obj['lpa_lpa0'], obj['walk'], obj['garden'], obj['swim'], obj['bike'], obj['dance'], obj['hexercises'], obj['hockey'], obj['skate'], obj['inline'], obj['jogrun'], obj['golf'], obj['aerobics'], obj['ski'], obj['bowl'], obj['baseball'], obj['tennis'], obj['weights'], obj['fishing'], obj['volleyball'], obj['basketball'], obj['soccer'], obj['other'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "lpa_lpa0",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "walk",
                            "garden",
                            "swim",
                            "bike",
                            "dance",
                            "hexercises",
                            "hockey",
                            "skate",
                            "inline",
                            "jogrun",
                            "golf",
                            "aerobics",
                            "ski",
                            "bowl",
                            "baseball",
                            "tennis",
                            "weights",
                            "fishing",
                            "volleyball",
                            "basketball",
                            "soccer",
                            "other"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "metadata": { "label": "Activity", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "PhysicalActivityLog_cont",
                        "equation": "derived = userFunctions['PhysicalActivityLog_cont.fun'](obj['PhysicalActivity'], userFunctions, func);",
                        "derivedFrom": ["PhysicalActivity"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "DepInd",
                        "equation": "derived = userFunctions['DepInd.fun'](obj['dep'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "dep",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "0",
                                "displayValue": "Low level of neighbourhood deprivation",
                                "description": "1st or 2nd quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "1",
                                "displayValue": "Moderate level of neighbourhood deprivation",
                                "description": "3rd quinitle of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "2",
                                "displayValue": "High level of neighbourhood deprivation",
                                "description": "4th or 5th quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            }
                        ],
                        "metadata": {
                            "label": "Deprivation Level",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "DepIndHigh_cat",
                        "equation": "derived = userFunctions['DepIndHigh_cat.fun'](obj['DepInd'], userFunctions, func);",
                        "derivedFrom": ["DepInd"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High neighbourhood deprivation",
                                "description": "4th or 5th quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "High deprivation",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "DepIndMod_cat",
                        "equation": "derived = userFunctions['DepIndMod_cat.fun'](obj['DepInd'], userFunctions, func);",
                        "derivedFrom": ["DepInd"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate neighbourhood deprivation",
                                "description": "3rd quinitle of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "metadata": {
                            "label": "Average deprivation",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Edu2",
                        "equation": "derived = userFunctions['Edu2.fun'](obj['hs'], obj['ed'], obj['hdg'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "hs",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "ed",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "hdg",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Edu1",
                        "equation": "derived = userFunctions['Edu1.fun'](obj['Edu2'], userFunctions, func);",
                        "derivedFrom": ["Edu2"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduHSGrad_cat",
                        "equation": "derived = userFunctions['EduHSGrad_cat.fun'](obj['Edu1'], userFunctions, func);",
                        "derivedFrom": ["Edu1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High school graduate",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "High school", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "EduNoGrad_cat",
                        "equation": "derived = userFunctions['EduNoGrad_cat.fun'](obj['Edu1'], userFunctions, func);",
                        "derivedFrom": ["Edu1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Less than high school graduation",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "<High school",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "ImYrAgo",
                        "equation": "derived = userFunctions['ImYrAgo.fun'](obj['imm'], obj['imyr'], obj['CurrentYear'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "imm",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "imyr",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "CurrentYear",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig2",
                        "equation": "derived = userFunctions['Immig2.fun'](obj['imm'], obj['ImYrAgo'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "imm",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            "ImYrAgo"
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig1",
                        "equation": "derived = userFunctions['Immig1.fun'](obj['Immig2'], userFunctions, func);",
                        "derivedFrom": ["Immig2"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig0to15_cat",
                        "equation": "derived = userFunctions['Immig0to15_cat.fun'](obj['Immig1'], userFunctions, func);",
                        "derivedFrom": ["Immig1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated <15 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Immigrate <15y",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig16to30_cat",
                        "equation": "derived = userFunctions['Immig16to30_cat.fun'](obj['Immig1'], userFunctions, func);",
                        "derivedFrom": ["Immig1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 16 to 30 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Immigrate 15-30y",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Immig31to45_cat",
                        "equation": "derived = userFunctions['Immig31to45_cat.fun'](obj['Immig1'], userFunctions, func);",
                        "derivedFrom": ["Immig1"],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 31 to 45 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Immigrate 31-45y",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMI_cont",
                        "equation": "derived = userFunctions['BMI_cont.fun'](obj['weightlb'], obj['heightin_hft'], obj['heightin_hin'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "weightlb",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "heightin_hft",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            },
                            {
                                "name": "heightin_hin",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "BMI_spline",
                        "equation": "derived = userFunctions['BMI_spline.fun'](obj['BMI_cont'], userFunctions, func);",
                        "derivedFrom": ["BMI_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "BMI Spline", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "HeartDis_cat",
                        "equation": "derived = userFunctions['HeartDis_cat.fun'](obj['hd'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "hd",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has heart disease",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have heart disease",
                                "description": ""
                            }
                        ],
                        "metadata": {
                            "label": "Heart disease",
                            "shortLabel": ""
                        }
                    },
                    {
                        "fieldType": 1,
                        "name": "Stroke_cat",
                        "equation": "derived = userFunctions['Stroke_cat.fun'](obj['stk'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "stk",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Suffers from effects of a previous stroke",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not suffer from the effects of a previous stroke",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "Stroke", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Cancer_cat",
                        "equation": "derived = userFunctions['Cancer_cat.fun'](obj['can'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "can",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has cancer",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have cancer",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "Cancer", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeXCancer_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['Cancer_cat'], obj['Age_cont'], userFunctions, func);",
                        "derivedFrom": ["Cancer_cat", "Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "Diabetes_cat",
                        "equation": "derived = userFunctions['Diabetes_cat.fun'](obj['diab'], userFunctions, func);",
                        "derivedFrom": [
                            {
                                "name": "diab",
                                
                                "isRequired": false,
                                "metadata": { "label": "", "shortLabel": "" },
                                "fieldType": 0
                            }
                        ],
                        "extensions": {},
                        "isRequired": false,
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has diabetes",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have diabetes",
                                "description": ""
                            }
                        ],
                        "metadata": { "label": "Diabetes", "shortLabel": "" }
                    },
                    {
                        "fieldType": 1,
                        "name": "AgeXDiabetes_int",
                        "equation": "derived = userFunctions['Interact.fun'](obj['Diabetes_cat'], obj['Age_cont'], userFunctions, func);",
                        "derivedFrom": ["Diabetes_cat", "Age_cont"],
                        "extensions": {},
                        "isRequired": false,
                        
                        "metadata": { "label": "", "shortLabel": "" }
                    }
                ],
                "userFunctions": {
                    "Interact.fun": "\n        userFunctions[\"Interact.fun\"] = (function (var1, var2, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](var1)) && func['not'](func['is.na'](var2)), var1 * var2, undefined);\n})\n    ",
                    "Max.fun": "\n        userFunctions[\"Max.fun\"] = (function (var1, max, userFunctions, func) {\n    return func['ifelse2'](var1 > max, max, var1);\n})\n    ",
                    "NA0.fun": "\n        userFunctions[\"NA0.fun\"] = (function (var1, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](var1), 0, var1);\n})\n    ",
                    "falseifNA": "\n        userFunctions[\"falseifNA\"] = (function (x, userFunctions, func) {\n    return func['ifelse'](func['is.na'](x), false, x);\n})\n    ",
                    "Age_spline.fun(Age_spline)": "\n        userFunctions[\"Age_spline.fun(Age_spline)\"] = (function (Age_cont, point, userFunctions, func) {\n    return func['ifelse2'](Age_cont <= point, 0, func['ifelse2'](Age_cont > point, Age_cont - point, undefined));\n})\n    ",
                    "Age_spline.fun": "\n        userFunctions[\"Age_spline.fun\"] = (function (Age_cont, point, userFunctions, func) {\n    return userFunctions['Age_spline.fun(Age_spline)'](Age_cont, point, userFunctions, func);\n})\n    ",
                    "DrinksLastWeek.fun": "\n        userFunctions[\"DrinksLastWeek.fun\"] = (function (drk_drkm2, drk_drkt2, drk_drkw2, drk_drkr2, drk_drkf2, drk_drksa2, drk_drksu2, dany, userFunctions, func) {\n    return func['ifelse2'](dany == 'dany2', 0, func['ifelse2'](dany == 'dany1', drk_drkm2 + drk_drkt2 + drk_drkw2 + drk_drkr2 + drk_drkf2 + drk_drksa2 + drk_drksu2, undefined));\n})\n    ",
                    "Binge.fun": "\n        userFunctions[\"Binge.fun\"] = (function (db, dany, drk_drkm2, drk_drkt2, drk_drkw2, drk_drkr2, drk_drkf2, drk_drksa2, drk_drksu2, userFunctions, func) {\n    return func['ifelse2'](func['isIn'](db, 'db5', 'db6') || drk_drkm2 >= 5 || drk_drkt2 >= 5 || drk_drkw2 >= 5 || drk_drkr2 >= 5 || drk_drkf2 >= 5 || drk_drksa2 >= 5 || drk_drksu2 >= 5, 1, func['ifelse2'](func['isIn'](db, 'db1', 'db2', 'db3', 'db4') && dany == 'dany2' || func['isIn'](db, 'db1', 'db2', 'db3', 'db4') && dany == 'dany1' && (drk_drkm2 < 5 && drk_drkt2 < 5 && drk_drkw2 < 5 && drk_drkr2 < 5 && drk_drkf2 < 5 && drk_drksa2 < 5 && drk_drksu2 < 5), 0, undefined));\n})\n    ",
                    "AlcoholType.fun": "\n        userFunctions[\"AlcoholType.fun\"] = (function (Binge, dany, DrinksLastWeek_cont, cut1, cut2, userFunctions, func) {\n    return func['ifelse2'](Binge == 1, 2, func['ifelse2'](dany == 'dany2' || dany == 'dany1' && DrinksLastWeek_cont <= cut1, 0, func['ifelse2'](dany == 'dany1' && DrinksLastWeek_cont > cut1 && DrinksLastWeek_cont <= cut2, 1, func['ifelse2'](dany == 'dany1' && DrinksLastWeek_cont > cut2, 2, undefined))));\n})\n    ",
                    "AlcoholMod_cat.fun": "\n        userFunctions[\"AlcoholMod_cat.fun\"] = (function (AlcoholType, userFunctions, func) {\n    return func['ifelse'](AlcoholType == 1, 1, func['ifelse'](func['isIn'](AlcoholType, 0, 2), 0, undefined));\n})\n    ",
                    "AlcoholHeavy_cat.fun": "\n        userFunctions[\"AlcoholHeavy_cat.fun\"] = (function (AlcoholType, userFunctions, func) {\n    return func['ifelse'](AlcoholType == 2, 1, func['ifelse'](func['isIn'](AlcoholType, 0, 1), 0, undefined));\n})\n    ",
                    "QuitTime.fun": "\n        userFunctions[\"QuitTime.fun\"] = (function (stpn, stpny, userFunctions, func) {\n    return func['ifelse2'](stpn == 'stpn1', 0, func['ifelse2'](stpn == 'stpn2', 1, func['ifelse2'](stpn == 'stpn3', 2, func['ifelse2'](stpn == 'stpn4', stpny, undefined))));\n})\n    ",
                    "TypeOfSmoker.fun": "\n        userFunctions[\"TypeOfSmoker.fun\"] = (function (smk, evd, s100, cigdayf, cigdayd, userFunctions, func) {\n    return func['ifelse2'](smk == 'smk3' && evd == 'evd2' && s100 == 's1002', 0, func['ifelse2'](smk == 'smk3' && evd == 'evd1' && cigdayf < 20 || smk == 'smk3' && evd == 'evd2' && s100 == 's1001', 1, func['ifelse2'](smk == 'smk3' && evd == 'evd1' && cigdayf >= 20, 2, func['ifelse2'](smk == 'smk1' && cigdayd < 20 || smk == 'smk2', 3, func['ifelse2'](smk == 'smk1' && cigdayd >= 20, 4, undefined)))));\n})\n    ",
                    "QSLightCont_df1.fun": "\n        userFunctions[\"QSLightCont_df1.fun\"] = (function (TypeOfSmoker, QuitTime, sigma, userFunctions, func) {\n    return func['ifelse2'](func['isIn'](TypeOfSmoker, 0, 2, 4), 0, func['ifelse2'](TypeOfSmoker == 1, func['exp'](-QuitTime / sigma), func['ifelse2'](TypeOfSmoker == 3, 1, undefined)));\n})\n    ",
                    "QSLightCont_df2.fun": "\n        userFunctions[\"QSLightCont_df2.fun\"] = (function (SmokeDaily, DailyCig, Age_cont, AgeDailyQuit, sigma, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1 && DailyCig < 20, 1, func['ifelse2'](SmokeDaily == 2 && DailyCig < 20, func['exp'](-(Age_cont - AgeDailyQuit) / sigma), func['ifelse2'](func['isIn'](SmokeDaily, 1, 2) && DailyCig >= 20, 0, undefined))));\n})\n    ",
                    "QSHeavyCont_df1.fun": "\n        userFunctions[\"QSHeavyCont_df1.fun\"] = (function (TypeOfSmoker, QuitTime, sigma, userFunctions, func) {\n    return func['ifelse2'](func['isIn'](TypeOfSmoker, 0, 1, 3), 0, func['ifelse2'](TypeOfSmoker == 2, func['exp'](-QuitTime / sigma), func['ifelse2'](TypeOfSmoker == 4, 1, undefined)));\n})\n    ",
                    "QSHeavyCont_df2.fun": "\n        userFunctions[\"QSHeavyCont_df2.fun\"] = (function (SmokeDaily, DailyCig, Age_cont, AgeDailyQuit, sigma, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1 && DailyCig >= 20, 1, func['ifelse2'](SmokeDaily == 2 && DailyCig >= 20, func['exp'](-(Age_cont - AgeDailyQuit) / sigma), func['ifelse2'](func['isIn'](SmokeDaily, 1, 2) && DailyCig < 20, 0, undefined))));\n})\n    ",
                    "smoker.fun(smoker)": "\n        userFunctions[\"smoker.fun(smoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3), 1, func['ifelse'](func['isIn'](TypeOfSmoker2, 4, 5, 6), 0, undefined));\n})\n    ",
                    "eversmoker.fun(eversmoker)": "\n        userFunctions[\"eversmoker.fun(eversmoker)\"] = (function (TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](TypeOfSmoker2, 1, 2, 3, 4, 5), 1, func['ifelse'](TypeOfSmoker2 == 6, 0, undefined));\n})\n    ",
                    "SmokeSimple1.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple1.fun(SmokeSimple)\"] = (function (smoker, eversmoker, tsq_ds, TypeOfSmoker2, userFunctions, func) {\n    return func['ifelse2'](smoker == 0 && eversmoker == 0, 0, func['ifelse2'](smoker == 1 && eversmoker == 1, 1, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds < 5 || TypeOfSmoker2 == 5, 2, func['ifelse2'](smoker == 0 && eversmoker == 1 && tsq_ds >= 5, 3, undefined))));\n})\n    ",
                    "SmokeSimple2.fun(SmokeSimple)": "\n        userFunctions[\"SmokeSimple2.fun(SmokeSimple)\"] = (function (SmokeDaily, Age_cont, AgeDailyQuit, userFunctions, func) {\n    return func['ifelse2'](SmokeDaily == 0, 0, func['ifelse2'](SmokeDaily == 1, 1, func['ifelse2'](SmokeDaily == 2 && Age_cont < AgeDailyQuit + 5, 2, func['ifelse2'](SmokeDaily == 2 && Age_cont > AgeDailyQuit + 5, 3, undefined))));\n})\n    ",
                    "dfruit.fun": "\n        userFunctions[\"dfruit.fun\"] = (function (frt, frtu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](frt), undefined, func['ifelse'](frtu == 'frtd', frt, func['ifelse'](frtu == 'frtw', frt / 7, func['ifelse'](frtu == 'frtm', frt / 30, func['ifelse'](frtu == 'frty', frt / 365, undefined)))));\n})\n    ",
                    "dsalad.fun": "\n        userFunctions[\"dsalad.fun\"] = (function (sal, salu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](sal), undefined, func['ifelse'](salu == 'sald', sal, func['ifelse'](salu == 'salw', sal / 7, func['ifelse'](salu == 'salm', sal / 30, func['ifelse'](salu == 'saly', sal / 365, undefined)))));\n})\n    ",
                    "dpotato.fun": "\n        userFunctions[\"dpotato.fun\"] = (function (pot, potu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](pot), undefined, func['ifelse'](potu == 'potd', pot, func['ifelse'](potu == 'potw', pot / 7, func['ifelse'](potu == 'potm', pot / 30, func['ifelse'](potu == 'poty', pot / 365, undefined)))));\n})\n    ",
                    "dcarrot.fun": "\n        userFunctions[\"dcarrot.fun\"] = (function (car, caru, userFunctions, func) {\n    return func['ifelse'](func['is.na'](car), undefined, func['ifelse'](caru == 'card', car, func['ifelse'](caru == 'carw', car / 7, func['ifelse'](caru == 'carm', car / 30, func['ifelse'](caru == 'cary', car / 365, undefined)))));\n})\n    ",
                    "dveg.fun": "\n        userFunctions[\"dveg.fun\"] = (function (veg, vegu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](veg), undefined, func['ifelse'](vegu == 'vegd', veg, func['ifelse'](vegu == 'vegw', veg / 7, func['ifelse'](vegu == 'vegm', veg / 30, func['ifelse'](vegu == 'vegy', veg / 365, undefined)))));\n})\n    ",
                    "djuice.fun": "\n        userFunctions[\"djuice.fun\"] = (function (jui, juiu, userFunctions, func) {\n    return func['ifelse'](func['is.na'](jui), undefined, func['ifelse'](juiu == 'juid', jui, func['ifelse'](juiu == 'juiw', jui / 7, func['ifelse'](juiu == 'juim', jui / 30, func['ifelse'](juiu == 'juiy', jui / 365, undefined)))));\n})\n    ",
                    "FruitVeg.fun": "\n        userFunctions[\"FruitVeg.fun\"] = (function (dfruit, dsalad, dpotato, dcarrot, dveg, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](dfruit)) && func['not'](func['is.na'](dsalad)) && func['not'](func['is.na'](dpotato)) && func['not'](func['is.na'](dcarrot)) && func['not'](func['is.na'](dveg)), dfruit + dsalad + dpotato + dcarrot + dveg, undefined);\n})\n    ",
                    "FruitVeg8Max.fun": "\n        userFunctions[\"FruitVeg8Max.fun\"] = (function (FruitVeg, userFunctions, func) {\n    return func['ifelse2'](FruitVeg > 8, 8, func['ifelse2'](func['not'](func['is.na'](FruitVeg)), FruitVeg, undefined));\n})\n    ",
                    "HighPotatoFlag.fun": "\n        userFunctions[\"HighPotatoFlag.fun\"] = (function (dpotato, userFunctions, func) {\n    return func['ifelse2'](dpotato >= 1, 1, func['ifelse2'](func['not'](func['is.na'](dpotato)), 0, undefined));\n})\n    ",
                    "NoCarrotFlag.fun": "\n        userFunctions[\"NoCarrotFlag.fun\"] = (function (dcarrot, userFunctions, func) {\n    return func['ifelse2'](dcarrot == 0, 1, func['ifelse2'](func['not'](func['is.na'](dcarrot)), 0, undefined));\n})\n    ",
                    "HighJuice.fun": "\n        userFunctions[\"HighJuice.fun\"] = (function (djuice, userFunctions, func) {\n    return func['ifelse2'](djuice <= 0, 0, func['ifelse2'](djuice == 1, 0, func['ifelse2'](func['not'](func['is.na'](djuice)), djuice - 1, undefined)));\n})\n    ",
                    "DietScore.fun": "\n        userFunctions[\"DietScore.fun\"] = (function (FruitVeg8Max, HighPotatoFlag, NoCarrotFlag, HighJuice, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](FruitVeg8Max)) && func['not'](func['is.na'](HighPotatoFlag)) && func['not'](func['is.na'](NoCarrotFlag)) && func['not'](func['is.na'](HighJuice)), 2 + FruitVeg8Max - 2 * HighPotatoFlag - 2 * NoCarrotFlag - 2 * HighJuice, undefined);\n})\n    ",
                    "DietScore_cont.fun": "\n        userFunctions[\"DietScore_cont.fun\"] = (function (DietScore, userFunctions, func) {\n    return func['ifelse2'](DietScore < 0, 0, func['ifelse2'](DietScore > 10, 10, func['ifelse2'](func['not'](func['is.na'](DietScore)), DietScore, undefined)));\n})\n    ",
                    "Activity.fun": "\n        userFunctions[\"Activity.fun\"] = (function (lpa, lpam, lpat, userFunctions, func) {\n    return func['ifelse2'](lpa == 'Yes' && lpam == 'lpa15', lpat * 0.2167 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa30', lpat * 0.3833 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa60', lpat * 0.75 / 3, func['ifelse2'](lpa == 'Yes' && lpam == 'lpa61', lpat * 1 / 3, 0))));\n})\n    ",
                    "PhysicalActivity.fun(noactivity)": "\n        userFunctions[\"PhysicalActivity.fun(noactivity)\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return func['ifelse2'](lpa_lpa0 == 'Yes' && walk == 0 && garden == 0 && swim == 0 && bike == 0 && dance == 0 && hexercises == 0 && hockey == 0 && skate == 0 && inline == 0 && jogrun == 0 && golf == 0 && aerobics == 0 && ski == 0 && bowl == 0 && baseball == 0 && tennis == 0 && weights == 0 && fishing == 0 && volleyball == 0 && basketball == 0 && soccer == 0 && other == 0, 1, func['ifelse2'](func['is.na'](lpa_lpa0) && walk == 0 && garden == 0 && swim == 0 && bike == 0 && dance == 0 && hexercises == 0 && hockey == 0 && skate == 0 && inline == 0 && jogrun == 0 && golf == 0 && aerobics == 0 && ski == 0 && bowl == 0 && baseball == 0 && tennis == 0 && weights == 0 && fishing == 0 && volleyball == 0 && basketball == 0 && soccer == 0 && other == 0, undefined, 0));\n})\n    ",
                    "PhysicalActivity.fun(PhysicalActivity)": "\n        userFunctions[\"PhysicalActivity.fun(PhysicalActivity)\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](userFunctions['PhysicalActivity.fun(noactivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func)), undefined, func['ifelse2'](userFunctions['PhysicalActivity.fun(noactivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) == 1, 0, func['ifelse2'](3 * walk / 30 + 3 * garden / 30 + 3 * swim / 30 + 4 * bike / 30 + 3 * dance / 30 + 3 * hexercises / 30 + 6 * hockey / 30 + 4 * skate / 30 + 5 * inline / 30 + 9.5 * jogrun / 30 + 4 * golf / 30 + 4 * aerobics / 30 + 4 * ski / 30 + 2 * bowl / 30 + 3 * baseball / 30 + 4 * tennis / 30 + 3 * weights / 30 + 3 * fishing / 30 + 5 * volleyball / 30 + 6 * basketball / 30 + 5 * soccer / 30 + 4 * other / 30 > 10, 10, 3 * walk / 30 + 3 * garden / 30 + 3 * swim / 30 + 4 * bike / 30 + 3 * dance / 30 + 3 * hexercises / 30 + 6 * hockey / 30 + 4 * skate / 30 + 5 * inline / 30 + 9.5 * jogrun / 30 + 4 * golf / 30 + 4 * aerobics / 30 + 4 * ski / 30 + 2 * bowl / 30 + 3 * baseball / 30 + 4 * tennis / 30 + 3 * weights / 30 + 3 * fishing / 30 + 5 * volleyball / 30 + 6 * basketball / 30 + 5 * soccer / 30 + 4 * other / 30)));\n})\n    ",
                    "PhysicalActivity.fun": "\n        userFunctions[\"PhysicalActivity.fun\"] = (function (lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func) {\n    return userFunctions['PhysicalActivity.fun(PhysicalActivity)'](lpa_lpa0, walk, garden, swim, bike, dance, hexercises, hockey, skate, inline, jogrun, golf, aerobics, ski, bowl, baseball, tennis, weights, fishing, volleyball, basketball, soccer, other, userFunctions, func);\n})\n    ",
                    "PhysicalActivityLog_cont.fun(PhysicalActivity_cont)": "\n        userFunctions[\"PhysicalActivityLog_cont.fun(PhysicalActivity_cont)\"] = (function (PhysicalActivity, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](PhysicalActivity)), func['log'](1 + PhysicalActivity) / func['log'](10), undefined);\n})\n    ",
                    "PhysicalActivityLog_cont.fun": "\n        userFunctions[\"PhysicalActivityLog_cont.fun\"] = (function (PhysicalActivity, userFunctions, func) {\n    return userFunctions['PhysicalActivityLog_cont.fun(PhysicalActivity_cont)'](PhysicalActivity, userFunctions, func);\n})\n    ",
                    "DepInd.fun": "\n        userFunctions[\"DepInd.fun\"] = (function (dep, userFunctions, func) {\n    return func['ifelse'](dep == 'dep1', 0, func['ifelse'](dep == 'dep2', 1, func['ifelse'](dep == 'dep3', 2, undefined)));\n})\n    ",
                    "DepIndHigh_cat.fun": "\n        userFunctions[\"DepIndHigh_cat.fun\"] = (function (DepInd, userFunctions, func) {\n    return func['ifelse'](DepInd == 2, 1, func['ifelse'](func['isIn'](DepInd, 0, 1), 0, undefined));\n})\n    ",
                    "DepIndMod_cat.fun": "\n        userFunctions[\"DepIndMod_cat.fun\"] = (function (DepInd, userFunctions, func) {\n    return func['ifelse'](DepInd == 1, 1, func['ifelse'](func['isIn'](DepInd, 0, 2), 0, undefined));\n})\n    ",
                    "Edu2.fun": "\n        userFunctions[\"Edu2.fun\"] = (function (hs, ed, hdg, userFunctions, func) {\n    return func['ifelse2'](hs == 'hs2', 0, func['ifelse2'](hs == 'hs1' && ed == 'ed2', 1, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && hdg == 'hdg1', 2, func['ifelse2'](hs == 'hs1' && ed == 'ed1' && func['isIn'](hdg, 'hdg2', 'hdg3', 'hdg4', 'hdg5', 'hdg6'), 3, undefined))));\n})\n    ",
                    "Edu1.fun": "\n        userFunctions[\"Edu1.fun\"] = (function (Edu2, userFunctions, func) {\n    return func['ifelse'](Edu2 == 0, 2, func['ifelse'](Edu2 == 1, 1, func['ifelse'](func['isIn'](Edu2, 2, 3), 0, undefined)));\n})\n    ",
                    "EduHSGrad_cat.fun": "\n        userFunctions[\"EduHSGrad_cat.fun\"] = (function (Edu1, userFunctions, func) {\n    return func['ifelse'](Edu1 == 1, 1, func['ifelse'](func['isIn'](Edu1, 0, 2), 0, undefined));\n})\n    ",
                    "EduNoGrad_cat.fun": "\n        userFunctions[\"EduNoGrad_cat.fun\"] = (function (Edu1, userFunctions, func) {\n    return func['ifelse'](Edu1 == 2, 1, func['ifelse'](func['isIn'](Edu1, 0, 1), 0, undefined));\n})\n    ",
                    "ImYrAgo.fun(ImYrAgo)": "\n        userFunctions[\"ImYrAgo.fun(ImYrAgo)\"] = (function (imm, imyr, CurrentYear, userFunctions, func) {\n    return func['ifelse2'](func['is.na'](imm) || imm == 'imm2' && func['is.na'](imyr) || imm == 'imm1', undefined, CurrentYear - imyr);\n})\n    ",
                    "ImYrAgo.fun": "\n        userFunctions[\"ImYrAgo.fun\"] = (function (imm, imyr, CurrentYear, userFunctions, func) {\n    return userFunctions['ImYrAgo.fun(ImYrAgo)'](imm, imyr, CurrentYear, userFunctions, func);\n})\n    ",
                    "Immig2.fun(Immig2)": "\n        userFunctions[\"Immig2.fun(Immig2)\"] = (function (imm, ImYrAgo, userFunctions, func) {\n    return func['ifelse2'](imm == 'imm1', 0, func['ifelse2'](imm == 'imm2' && ImYrAgo >= 0 && ImYrAgo <= 15, 1, func['ifelse2'](imm == 'imm2' && ImYrAgo > 15 && ImYrAgo <= 30, 2, func['ifelse2'](imm == 'imm2' && ImYrAgo > 30 && ImYrAgo <= 45, 3, func['ifelse2'](imm == 'imm2' && ImYrAgo > 45, 4, undefined)))));\n})\n    ",
                    "Immig2.fun": "\n        userFunctions[\"Immig2.fun\"] = (function (imm, ImYrAgo, userFunctions, func) {\n    return userFunctions['Immig2.fun(Immig2)'](imm, ImYrAgo, userFunctions, func);\n})\n    ",
                    "Immig1.fun(Immig1)": "\n        userFunctions[\"Immig1.fun(Immig1)\"] = (function (Immig2, userFunctions, func) {\n    return func['ifelse'](func['isIn'](Immig2, 0, 4), 0, func['ifelse'](Immig2 == 1, 1, func['ifelse'](Immig2 == 2, 2, func['ifelse'](Immig2 == 3, 3, undefined))));\n})\n    ",
                    "Immig1.fun": "\n        userFunctions[\"Immig1.fun\"] = (function (Immig2, userFunctions, func) {\n    return userFunctions['Immig1.fun(Immig1)'](Immig2, userFunctions, func);\n})\n    ",
                    "Immig0to15_cat.fun(Immig0to15_cat)": "\n        userFunctions[\"Immig0to15_cat.fun(Immig0to15_cat)\"] = (function (Immig1, userFunctions, func) {\n    return func['ifelse'](Immig1 == 1, 1, func['ifelse'](func['isIn'](Immig1, 0, 2, 3), 0, undefined));\n})\n    ",
                    "Immig0to15_cat.fun": "\n        userFunctions[\"Immig0to15_cat.fun\"] = (function (Immig1, userFunctions, func) {\n    return userFunctions['Immig0to15_cat.fun(Immig0to15_cat)'](Immig1, userFunctions, func);\n})\n    ",
                    "Immig16to30_cat.fun(Immig16to30_cat)": "\n        userFunctions[\"Immig16to30_cat.fun(Immig16to30_cat)\"] = (function (Immig1, userFunctions, func) {\n    return func['ifelse'](Immig1 == 2, 1, func['ifelse'](func['isIn'](Immig1, 0, 1, 3), 0, undefined));\n})\n    ",
                    "Immig16to30_cat.fun": "\n        userFunctions[\"Immig16to30_cat.fun\"] = (function (Immig1, userFunctions, func) {\n    return userFunctions['Immig16to30_cat.fun(Immig16to30_cat)'](Immig1, userFunctions, func);\n})\n    ",
                    "Immig31to45_cat.fun(Immig31to45_cat)": "\n        userFunctions[\"Immig31to45_cat.fun(Immig31to45_cat)\"] = (function (Immig1, userFunctions, func) {\n    return func['ifelse'](Immig1 == 3, 1, func['ifelse'](func['isIn'](Immig1, 0, 1, 2), 0, undefined));\n})\n    ",
                    "Immig31to45_cat.fun": "\n        userFunctions[\"Immig31to45_cat.fun\"] = (function (Immig1, userFunctions, func) {\n    return userFunctions['Immig31to45_cat.fun(Immig31to45_cat)'](Immig1, userFunctions, func);\n})\n    ",
                    "BMI_cont.fun(weightkg)": "\n        userFunctions[\"BMI_cont.fun(weightkg)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](weightlb)), weightlb / 2.2046226218, undefined);\n})\n    ",
                    "BMI_cont.fun(heightm)": "\n        userFunctions[\"BMI_cont.fun(heightm)\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](heightin_hft)) && func['not'](func['is.na'](heightin_hin)), (heightin_hft * 12 + heightin_hin) / 39.3701, undefined);\n})\n    ",
                    "BMI_cont.fun": "\n        userFunctions[\"BMI_cont.fun\"] = (function (weightlb, heightin_hft, heightin_hin, userFunctions, func) {\n    return func['ifelse2'](func['not'](func['is.na'](userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))) && func['not'](func['is.na'](userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func))), userFunctions['BMI_cont.fun(weightkg)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) / (userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func) * userFunctions['BMI_cont.fun(heightm)'](weightlb, heightin_hft, heightin_hin, userFunctions, func)), undefined);\n})\n    ",
                    "BMI_spline.fun": "\n        userFunctions[\"BMI_spline.fun\"] = (function (BMI_cont, userFunctions, func) {\n    return func['ifelse2'](BMI_cont - 35 > 0, BMI_cont - 35, func['ifelse2'](BMI_cont - 35 <= 0, 0, undefined));\n})\n    ",
                    "HeartDis_cat.fun": "\n        userFunctions[\"HeartDis_cat.fun\"] = (function (hd, userFunctions, func) {\n    return func['ifelse'](hd == 'hd1', 1, func['ifelse'](hd == 'hd2', 0, undefined));\n})\n    ",
                    "Stroke_cat.fun": "\n        userFunctions[\"Stroke_cat.fun\"] = (function (stk, userFunctions, func) {\n    return func['ifelse'](stk == 'stk1', 1, func['ifelse'](stk == 'stk2', 0, undefined));\n})\n    ",
                    "Cancer_cat.fun": "\n        userFunctions[\"Cancer_cat.fun\"] = (function (can, userFunctions, func) {\n    return func['ifelse'](can == 'can1', 1, func['ifelse'](can == 'can2', 0, undefined));\n})\n    ",
                    "Diabetes_cat.fun": "\n        userFunctions[\"Diabetes_cat.fun\"] = (function (diab, userFunctions, func) {\n    return func['ifelse'](diab == 'diab1', 1, func['ifelse'](diab == 'diab2', 0, undefined));\n})\n    "
                },
                "tables": {},
                "baseline": 0.000119054,
                "covariates": [
                    {
                        "name": "Age_cont",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.089188802,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE"]
                    },
                    {
                        "name": "Age_spline",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.029217937,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE"]
                    },
                    {
                        "name": "QSLightCont_df",
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "isRequired": false,
                        "metadata": {
                            "label": "Light smoker",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.806847255,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["SMOKING"]
                    },
                    {
                        "name": "QSHeavyCont_df",
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 1, "isOpen": false }
                        }],
                        "isRequired": false,
                        "metadata": {
                            "label": "Heavy smoker",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 1.180303979,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["SMOKING"]
                    },
                    {
                        "name": "PhysicalActivityLog_cont",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.92835536,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["ACTIVITY"]
                    },
                    {
                        "name": "DietScore_cont",
                        "intervals": [{
                            "lowerMargin": { "margin": 0, "isOpen": false },
                            "higherMargin": { "margin": 10, "isOpen": false }
                        }],
                        "isRequired": false,
                        "metadata": { "label": "Diet", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": -0.043671199,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DIET"]
                    },
                    {
                        "name": "BMI_spline",
                        
                        "isRequired": false,
                        "metadata": { "label": "BMI Spline", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.024067379,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["BMI"]
                    },
                    {
                        "name": "AgeXCancer_int",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.052559968,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE", "DISEASE"]
                    },
                    {
                        "name": "AgeXDiabetes_int",
                        
                        "isRequired": false,
                        "metadata": { "label": "", "shortLabel": "" },
                        "dataFieldType": 3,
                        "beta": -0.009427044,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["AGE", "DISEASE"]
                    },
                    {
                        "name": "AlcoholHeavy_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Heavy drinker",
                                "description": "Males: >21 drinks/week; Females: >14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Heavy alcohol",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.079704971,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["ALCOHOL"]
                    },
                    {
                        "name": "AlcoholMod_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate drinker",
                                "description": "Males: 4-21 drinks/week; Females: 3 to 14 drinks/week"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Mod. alcohol",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.20063377,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["ALCOHOL"]
                    },
                    {
                        "name": "DepIndMod_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Moderate neighbourhood deprivation",
                                "description": "3rd quinitle of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Average deprivation",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.046587007,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DEPRIVATION"]
                    },
                    {
                        "name": "DepIndHigh_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High neighbourhood deprivation",
                                "description": "4th or 5th quintile of neighbourhood social and material deprivation (Pampalon's deprivaiton index)"
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": "Else"
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "High deprivation",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.204884993,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DEPRIVATION"]
                    },
                    {
                        "name": "EduNoGrad_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Less than high school graduation",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "<High school",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.06313076,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["EDUCATION"]
                    },
                    {
                        "name": "EduHSGrad_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "High school graduate",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "High school",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.03270859,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["EDUCATION"]
                    },
                    {
                        "name": "Immig0to15_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated <15 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Immigrate <15y",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.604221148,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["IMMIGRATION"]
                    },
                    {
                        "name": "Immig16to30_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 16 to 30 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Immigrate 15-30y",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.226038246,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["IMMIGRATION"]
                    },
                    {
                        "name": "Immig31to45_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Immigrated 31 to 45 years",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Else",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Immigrate 31-45y",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": -0.13250613,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["IMMIGRATION"]
                    },
                    {
                        "name": "HeartDis_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has heart disease",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have heart disease",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": {
                            "label": "Heart disease",
                            "shortLabel": ""
                        },
                        "dataFieldType": 2,
                        "beta": 0.341870655,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    },
                    {
                        "name": "Stroke_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Suffers from effects of a previous stroke",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not suffer from the effects of a previous stroke",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": { "label": "Stroke", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 0.235906455,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    },
                    {
                        "name": "Cancer_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has cancer",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have cancer",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": { "label": "Cancer", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 4.856718986,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    },
                    {
                        "name": "Diabetes_cat",
                        "categories": [
                            {
                                "value": "1",
                                "displayValue": "Has diabetes",
                                "description": ""
                            },
                            {
                                "value": "0",
                                "displayValue": "Does not have diabetes",
                                "description": ""
                            }
                        ],
                        "isRequired": false,
                        "metadata": { "label": "Diabetes", "shortLabel": "" },
                        "dataFieldType": 2,
                        "beta": 1.160180725,
                        "referencePoint": null,
                        "extensions": {},
                        "groups": ["DISEASE"]
                    }
                ],
                "timeMetric": "years",
                "maximumTime": 5,
                "algorithmType": 1
            },
            "predicate": {
                "equation": "predicateResult = obj['sex'] === 'female'",
                "variables": ["sex"]
            }
        }
    ],
    "modelFields": []
}
